package org.epfl.graphic.convertion;

import org.epfl.graphic.pragma.Colors.*;


actor YUVtoRGB () int(size=10) Y,
				  int(size=10) U,
				  int(size=10) V
				  ==>
				  uint(size=24) RBG
				  :
				  /*int(size=10) R, int(size=10) G, int(size=10) B*/

	int r := 0;

	int g := 0;

	int b := 0;

	//int i := 0;


	function Clip8(int(size=9) v) --> int(size=9) :
		if (v > 255) then
			255 elsif (v < 0) then 0
		else
			v
		end
	end
	
	

	action Y:[ y ], U:[ u ], V:[ v ] ==> RBG:[toRGB(Clip8(r),Clip8(g),Clip8(b))] //:[Clip8(r)], G:[ Clip8(g) ], B:[ Clip8(b) ]
	var int t = (76306 * (y - 16)) + 32768
	do 
		//println("in "+i+" y cr cb "+y+" "+u+" "+v);
	
		r := ((t + (104597 * (v - 128))) >> 16);
		g := ((t - ((25675 * (u - 128)) + (53279 * (v - 128)))) >> 16);
		b := ((t + (132201 * (u - 128))) >> 16); //println("out "+i+" r g b "+r+" "+g+" "+b);
		//i := i + 1;
	end

end

