// Author: Richard Thavot <richard.thavot@epfl.ch>
package org.epfl.graphic.io;

import org.epfl.graphic.pragma.GraphicsResolution.*;
import std.io.DVI.*;
import org.epfl.graphic.pragma.Colors.*;

actor ch7301c ()
	@native bool HSYNC,
	@native bool VSYNC,
	@native bool DE,
	@native uint(size=12) Pa,
	@native uint(size=12) Pb
	==>
	:
	
	initialize ==>
	do
		init(HorizontalDisplayPorch, VerticalDisplayPorch);
	end
	
	/*function getPa(uint(size=24) RGB) --> uint(size=12) 
	var 
		uint(size=8) B = getB(RGB),
		uint(size=8) G = getG(RGB)
	:
		(((G & 0x0F)<<8) | B) & 0xFFF
	end
	
	function getPb(uint(size=24) RGB) --> uint(size=12) 
	var 
		uint(size=8) R = getR(RGB),
		uint(size=8) G = getG(RGB)
	:
		((R << 4) | (G >> 4)) & 0xFFF
	end*/
	
	border : action DE:[enable], HSYNC:[hs], VSYNC:[vs] ==>
	guard not enable
	end
	
	image : action DE:[enable], HSYNC:[hs], VSYNC:[vs],  Pa:[pa], Pb:[pb] ==>
	guard enable
	var uint(size=8) r = (pb >> 4),
		uint(size=8) g = ((pa >> 8) & 0x0F) | ((pb & 0x0F)<< 4) ,
		uint(size=8) b = (pa & 0xFF)
	do
		setRGB(toRGB(r,g,b));
	end
	
end