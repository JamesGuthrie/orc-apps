package org.epfl.decoder.texture;

actor IDCT_1D_1Actor_Stage1_NoSize () int (size = 23) inData0, int (size = 23) inData1, int (size = 23) inData2, int (size = 23) inData3,
				int (size = 23) inData4, int (size = 23) inData5, int (size = 23) inData6, int (size = 23) inData7 ==>
				int (size = 26) outData0, int (size = 26) outData1, int (size = 26) outData2, int (size = 26) outData3, 
				int (size = 26) outData4, int (size = 26) outData5, int (size = 26) outData6, int (size = 26) outData7
				/*int (size = 32) out_test*/ :

	int outd0 := 0;
	int outd1 := 0;
	int outd2 := 0;
	int outd3 := 0;
	int outd4 := 0;
	int outd5 := 0;
	int outd6 := 0;
	int outd7 := 0;
	
	int x0 := 0;
	int x1 := 0;
	int x2 := 0;
	int x3 := 0;
	int x4 := 0;
	int x5 := 0;
	int x6 := 0;
	int x7 := 0;
	
	int xa := 0;
	int xb := 0;
	
	int y2 := 0;
	int y3 := 0;

	action inData0: [ind0], inData1: [ind1], inData2: [ind2], inData3: [ind3], 
			inData4: [ind4], inData5: [ind5], inData6: [ind6], inData7: [ind7] ==> 
			outData0: [outd0], outData1: [outd1], outData2: [outd2], outData3: [outd3],
			outData4: [outd4], outData5: [outd5], outData6: [outd6], outData7: [outd7]//, out_test:[0]
	do
		x0 := ind0;
		x1 := ind1;
		x2 := ind2;
		x3 := ind3;
		x4 := ind4;
		x5 := ind5;
		x6 := ind6;
		x7 := ind7;
		
		xa := x1 + x7;
		xb := x1 - x7;
		
		/* 3rd stage: */
  		x1 := xa + x3;
  		x3 := xa - x3;
  		x7 := xb + x5;
  		x5 := xb - x5;
  		
  		//println("x1 x3 x5 x7 "+x1+" "+x3+" "+x5+" "+x7);
  		
  		y2 := (x3 >> 3) - (x3 >> 7);
  		y3 := y2 - (x3 >> 11);
  		xa := y2 + (y3 >> 1);
  		x3 := x3 - y2;
  		
  		y2 := (x5 >> 3) - (x5 >> 7);
  		y3 := y2 - (x5 >> 11);
  		xb := y2 + (y3 >> 1);
  		x5 := x5 - y2;
  		
  		//println("x3 xa xb x5 "+x3+" "+xa+" "+xb+" "+x5);
  		
  		x3 := x3 - xb;
  		x5 := x5 + xa;
  		
  		y2 := (x1 >> 9) - x1;
  		xa := x1 >> 1;
  		x1 := (y2 >> 2) - y2;
  		
  		y2 := (x7 >> 9) - x7;
  		xb := x7 >> 1;
  		x7 := (y2 >> 2) - y2;
  		
  		x1 := x1 + xb;
  		x7 := x7 - xa;
  		
  		//println("x1 x3 x5 x7 "+x1+" "+x3+" "+x5+" "+x7);
  		
  		y2 := x2 + (x2 >> 5);
  		y3 := y2 >> 2;
  		x2 := y3 + (x2 >> 4);
  		xa := y2 - y3;
  		
  		y2 := x6 + (x6 >> 5);
  		y3 := y2 >> 2;
  		x6 := y3 + (x6 >> 4);
  		xb := y2 - y3;
  		
  		x2 := x2 - xb;
  		x6 := x6 + xa;

  		xa := x0 + x4; /* x0 */
  		xb := x0 - x4; /* x4 */

 	 	/* 2nd stage: */
  		x0 := xa + x6;
  		x6 := xa - x6;
  		x4 := xb + x2;
  		x2 := xb - x2;
  		
  		outd0 := x0 + x1;
  		outd1 := x4 + x5;
  		outd2 := x2 + x3;
  		outd3 := x6 + x7;
  		outd4 := x6 - x7;
  		outd5 := x2 - x3;
  		outd6 := x4 - x5;
  		outd7 := x0 - x1;
  		
  		//println("output: "+outd0+" "+outd1+" "+outd2+" "+outd3+" "+outd4+" "+outd5+" "+outd6+" "+outd7);
  		//println("");
	end
	
end