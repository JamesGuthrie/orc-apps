/*
*	author:			alhadi.abrahman@epfl.ch
*	description: 	Temporary memory to store scaled input of IDCT
					The actor first stores all 8x8 incoming data, then outputs each
					row in parallel
*	parameters:		-			
*	input: 			inData - IDCT scaled input
*	output: 		outData0 to outData7 - parallel output of all 8 pixels in a row
*/

package org.epfl.decoder.texture;

actor MemCache1_reg () int (size = 23) inData ==>
				int (size = 23) outData0, int (size = 23) outData1, int (size = 23) outData2, int (size = 23) outData3, 
				int (size = 23) outData4, int (size = 23) outData5, int (size = 23) outData6, int (size = 23) outData7/* , int(size=32) out_test*/ :

	int (size = 23) outd0 := 0;
	int (size = 23) outd1 := 0;
	int (size = 23) outd2 := 0;
	int (size = 23) outd3 := 0;
	int (size = 23) outd4 := 0;
	int (size = 23) outd5 := 0;
	int (size = 23) outd6 := 0;
	int (size = 23) outd7 := 0;
	int (size = 23) ind0 := 0;
	int (size = 23) ind1 := 0;
	int (size = 23) ind2 := 0;
	int (size = 23) ind3 := 0;
	int (size = 23) ind4 := 0;
	int (size = 23) ind5 := 0;
	int (size = 23) ind6 := 0;
	int (size = 23) ind7 := 0;
	int (size = 23) ind8 := 0;
	int (size = 23) ind9 := 0;
	int (size = 23) ind10 := 0;
	int (size = 23) ind11 := 0;
	int (size = 23) ind12 := 0;
	int (size = 23) ind13 := 0;
	int (size = 23) ind14 := 0;
	int (size = 23) ind15 := 0;
	int (size = 23) ind16 := 0;
	int (size = 23) ind17 := 0;
	int (size = 23) ind18 := 0;
	int (size = 23) ind19 := 0;
	int (size = 23) ind20 := 0;
	int (size = 23) ind21 := 0;
	int (size = 23) ind22 := 0;
	int (size = 23) ind23 := 0;
	int (size = 23) ind24 := 0;
	int (size = 23) ind25 := 0;
	int (size = 23) ind26 := 0;
	int (size = 23) ind27 := 0;
	int (size = 23) ind28 := 0;
	int (size = 23) ind29 := 0;
	int (size = 23) ind30 := 0;
	int (size = 23) ind31 := 0;
	int (size = 23) ind32 := 0;
	int (size = 23) ind33 := 0;
	int (size = 23) ind34 := 0;
	int (size = 23) ind35 := 0;
	int (size = 23) ind36 := 0;
	int (size = 23) ind37 := 0;
	int (size = 23) ind38 := 0;
	int (size = 23) ind39 := 0;
	int (size = 23) ind40 := 0;
	int (size = 23) ind41 := 0;
	int (size = 23) ind42 := 0;
	int (size = 23) ind43 := 0;
	int (size = 23) ind44 := 0;
	int (size = 23) ind45 := 0;
	int (size = 23) ind46 := 0;
	int (size = 23) ind47 := 0;
	int (size = 23) ind48 := 0;
	int (size = 23) ind49 := 0;
	int (size = 23) ind50 := 0;
	int (size = 23) ind51 := 0;
	int (size = 23) ind52 := 0;
	int (size = 23) ind53 := 0;
	int (size = 23) ind54 := 0;
	int (size = 23) ind55 := 0;
	int (size = 23) ind56 := 0;
	int (size = 23) ind57 := 0;
	int (size = 23) ind58 := 0;
	int (size = 23) ind59 := 0;
	int (size = 23) ind60 := 0;
	int (size = 23) ind61 := 0;
	int (size = 23) ind62 := 0;
	int (size = 23) ind63 := 0;
	
	dc0: action inData: [ind] ==> 
  	do
  		ind0 := ind;
 	end
 	
 	dc1: action inData: [ind] ==> 
  	do
  		ind1 := ind;
 	end
 	
 	dc2: action inData: [ind] ==> 
  	do
  		ind2 := ind;
 	end
 	
 	dc3: action inData: [ind] ==> 
  	do
  		ind3 := ind;
 	end
 	
 	dc4: action inData: [ind] ==> 
  	do
  		ind4 := ind;
 	end
 	
 	dc5: action inData: [ind] ==> 
  	do
  		ind5 := ind;
 	end
 	
 	dc6: action inData: [ind] ==> 
  	do
  		ind6 := ind;
 	end
 	
 	dc7: action inData: [ind] ==> 
  	do
  		ind7 := ind;
 	end
 	
 	dc8: action inData: [ind] ==> 
  	do
  		ind8 := ind;
 	end
 	
 	dc9: action inData: [ind] ==> 
  	do
  		ind9 := ind;
 	end
 	
 	dc10: action inData: [ind] ==> 
  	do
  		ind10 := ind;
 	end
 	
 	dc11: action inData: [ind] ==> 
  	do
  		ind11 := ind;
 	end
 	
 	dc12: action inData: [ind] ==> 
  	do
  		ind12 := ind;
 	end
 	
 	dc13: action inData: [ind] ==> 
  	do
  		ind13 := ind;
 	end
 	
 	dc14: action inData: [ind] ==> 
  	do
  		ind14 := ind;
 	end
 	
 	dc15: action inData: [ind] ==> 
  	do
  		ind15 := ind;
 	end
 	
 	dc16: action inData: [ind] ==> 
  	do
  		ind16 := ind;
 	end
 	
 	dc17: action inData: [ind] ==> 
  	do
  		ind17 := ind;
 	end
 	
 	dc18: action inData: [ind] ==> 
  	do
  		ind18 := ind;
 	end
 	
 	dc19: action inData: [ind] ==> 
  	do
  		ind19 := ind;
 	end
 	
 	dc20: action inData: [ind] ==> 
  	do
  		ind20 := ind;
 	end
 	
 	dc21: action inData: [ind] ==> 
  	do
  		ind21 := ind;
 	end
 	
 	dc22: action inData: [ind] ==> 
  	do
  		ind22 := ind;
 	end
 	
 	dc23: action inData: [ind] ==> 
  	do
  		ind23 := ind;
 	end
 	
 	dc24: action inData: [ind] ==> 
  	do
  		ind24 := ind;
 	end
 	
 	dc25: action inData: [ind] ==> 
  	do
  		ind25 := ind;
 	end
 	
 	dc26: action inData: [ind] ==> 
  	do
  		ind26 := ind;
 	end
 	
 	dc27: action inData: [ind] ==> 
  	do
  		ind27 := ind;
 	end
 	
 	dc28: action inData: [ind] ==> 
  	do
  		ind28 := ind;
 	end
 	
 	dc29: action inData: [ind] ==> 
  	do
  		ind29 := ind;
 	end
 	
 	dc30: action inData: [ind] ==> 
  	do
  		ind30 := ind;
 	end
 	
 	dc31: action inData: [ind] ==> 
  	do
  		ind31 := ind;
 	end
 	
 	dc32: action inData: [ind] ==> 
  	do
  		ind32 := ind;
 	end
 	
 	dc33: action inData: [ind] ==> 
  	do
  		ind33 := ind;
 	end
 	
 	dc34: action inData: [ind] ==> 
  	do
  		ind34 := ind;
 	end
 	
 	dc35: action inData: [ind] ==> 
  	do
  		ind35 := ind;
 	end
 	
 	dc36: action inData: [ind] ==> 
  	do
  		ind36 := ind;
 	end
 	
 	dc37: action inData: [ind] ==> 
  	do
  		ind37 := ind;
 	end
 	
 	dc38: action inData: [ind] ==> 
  	do
  		ind38 := ind;
 	end
 	
 	dc39: action inData: [ind] ==> 
  	do
  		ind39 := ind;
 	end
 	
 	dc40: action inData: [ind] ==> 
  	do
  		ind40 := ind;
 	end
 	
 	dc41: action inData: [ind] ==> 
  	do
  		ind41 := ind;
 	end
 	
 	dc42: action inData: [ind] ==> 
  	do
  		ind42 := ind;
 	end
 	
 	dc43: action inData: [ind] ==> 
  	do
  		ind43 := ind;
 	end
 	
 	dc44: action inData: [ind] ==> 
  	do
  		ind44 := ind;
 	end
 	
 	dc45: action inData: [ind] ==> 
  	do
  		ind45 := ind;
 	end
 	
 	dc46: action inData: [ind] ==> 
  	do
  		ind46 := ind;
 	end
 	
 	dc47: action inData: [ind] ==> 
  	do
  		ind47 := ind;
 	end
 	
 	dc48: action inData: [ind] ==> 
  	do
  		ind48 := ind;
 	end
 	
 	dc49: action inData: [ind] ==> 
  	do
  		ind49 := ind;
 	end
 	
 	dc50: action inData: [ind] ==> 
  	do
  		ind50 := ind;
 	end
 	
 	dc51: action inData: [ind] ==> 
  	do
  		ind51 := ind;
 	end
 	
 	dc52: action inData: [ind] ==> 
  	do
  		ind52 := ind;
 	end
 	
 	dc53: action inData: [ind] ==> 
  	do
  		ind53 := ind;
 	end
 	
 	dc54: action inData: [ind] ==> 
  	do
  		ind54 := ind;
 	end
 	
 	dc55: action inData: [ind] ==> 
  	do
  		ind55 := ind;
 	end
 	
 	dc56: action inData: [ind] ==> 
  	do
  		ind56 := ind;
 	end
 	
 	dc57: action inData: [ind] ==> 
  	do
  		ind57 := ind;
 	end
 	
 	dc58: action inData: [ind] ==> 
  	do
  		ind58 := ind;
 	end
 	
 	dc59: action inData: [ind] ==> 
  	do
  		ind59 := ind;
 	end
 	
 	dc60: action inData: [ind] ==> 
  	do
  		ind60 := ind;
 	end
 	
 	dc61: action inData: [ind] ==> 
  	do
  		ind61 := ind;
 	end
 	
 	dc62: action inData: [ind] ==> 
  	do
  		ind62 := ind;
 	end
 	
 	dc63: action inData: [ind] ==> 
  	do
  		ind63 := ind;
 	end

	//output data
	out0: action ==> outData0: [outd0], outData1: [outd1], outData2: [outd2], outData3: [outd3],
						outData4: [outd4], outData5: [outd5], outData6: [outd6], outData7: [outd7]//, out_test:[0]
	do
		outd0 := ind0;
		outd1 := ind1;
		outd2 := ind2;
		outd3 := ind3;
		outd4 := ind4;
		outd5 := ind5;
		outd6 := ind6;
		outd7 := ind7;
	end
	
	out1: action ==> outData0: [outd0], outData1: [outd1], outData2: [outd2], outData3: [outd3],
						outData4: [outd4], outData5: [outd5], outData6: [outd6], outData7: [outd7]//, out_test:[1]
	do
		outd0 := ind8;
		outd1 := ind9;
		outd2 := ind10;
		outd3 := ind11;
		outd4 := ind12;
		outd5 := ind13;
		outd6 := ind14;
		outd7 := ind15;
	end
	
	out2: action ==> outData0: [outd0], outData1: [outd1], outData2: [outd2], outData3: [outd3],
						outData4: [outd4], outData5: [outd5], outData6: [outd6], outData7: [outd7]//, out_test:[2]
	do
		outd0 := ind16;
		outd1 := ind17;
		outd2 := ind18;
		outd3 := ind19;
		outd4 := ind20;
		outd5 := ind21;
		outd6 := ind22;
		outd7 := ind23;
	end
	
	out3: action ==> outData0: [outd0], outData1: [outd1], outData2: [outd2], outData3: [outd3],
						outData4: [outd4], outData5: [outd5], outData6: [outd6], outData7: [outd7]//, out_test:[3]
	do
		outd0 := ind24;
		outd1 := ind25;
		outd2 := ind26;
		outd3 := ind27;
		outd4 := ind28;
		outd5 := ind29;
		outd6 := ind30;
		outd7 := ind31;
	end
	
	out4: action ==> outData0: [outd0], outData1: [outd1], outData2: [outd2], outData3: [outd3],
						outData4: [outd4], outData5: [outd5], outData6: [outd6], outData7: [outd7]//, out_test:[4]
	do
		outd0 := ind32;
		outd1 := ind33;
		outd2 := ind34;
		outd3 := ind35;
		outd4 := ind36;
		outd5 := ind37;
		outd6 := ind38;
		outd7 := ind39;
	end
	
	out5: action ==> outData0: [outd0], outData1: [outd1], outData2: [outd2], outData3: [outd3],
						outData4: [outd4], outData5: [outd5], outData6: [outd6], outData7: [outd7]//, out_test:[5]
	do
		outd0 := ind40;
		outd1 := ind41;
		outd2 := ind42;
		outd3 := ind43;
		outd4 := ind44;
		outd5 := ind45;
		outd6 := ind46;
		outd7 := ind47;
	end
	
	out6: action ==> outData0: [outd0], outData1: [outd1], outData2: [outd2], outData3: [outd3],
						outData4: [outd4], outData5: [outd5], outData6: [outd6], outData7: [outd7]//, out_test:[6]
	do
		outd0 := ind48;
		outd1 := ind49;
		outd2 := ind50;
		outd3 := ind51;
		outd4 := ind52;
		outd5 := ind53;
		outd6 := ind54;
		outd7 := ind55;
	end
	
	out7: action ==> outData0: [outd0], outData1: [outd1], outData2: [outd2], outData3: [outd3],
						outData4: [outd4], outData5: [outd5], outData6: [outd6], outData7: [outd7]//, out_test:[7]
	do
		outd0 := ind56;
		outd1 := ind57;
		outd2 := ind58;
		outd3 := ind59;
		outd4 := ind60;
		outd5 := ind61;
		outd6 := ind62;
		outd7 := ind63;
	end
	
	schedule fsm s0 :
	  s0( dc0 )  --> s1;
	  s1( dc1 )  --> s2;
	  s2( dc2 )  --> s3;
	  s3( dc3 )  --> s4;
	  s4( dc4 )  --> s5;
	  s5( dc5 )  --> s6;
	  s6( dc6 )  --> s7;
	  s7( dc7 )  --> s8;
	  s8( dc8 )  --> s9;
	  s9( dc9 )  --> s10;
	  s10( dc10 )  --> s11;
	  s11( dc11 )  --> s12;
	  s12( dc12 )  --> s13;
	  s13( dc13 )  --> s14;
	  s14( dc14 )  --> s15;
	  s15( dc15 )  --> s16;
	  s16( dc16 )  --> s17;
	  s17( dc17 )  --> s18;
	  s18( dc18 )  --> s19;
	  s19( dc19 )  --> s20;
	  s20( dc20 )  --> s21;
	  s21( dc21 )  --> s22;
	  s22( dc22 )  --> s23;
	  s23( dc23 )  --> s24;
	  s24( dc24 )  --> s25;
	  s25( dc25 )  --> s26;
	  s26( dc26 )  --> s27;
	  s27( dc27 )  --> s28;
	  s28( dc28 )  --> s29;
	  s29( dc29 )  --> s30;
	  s30( dc30 )  --> s31;
	  s31( dc31 )  --> s32;
	  s32( dc32 )  --> s33;
	  s33( dc33 )  --> s34;
	  s34( dc34 )  --> s35;
	  s35( dc35 )  --> s36;
	  s36( dc36 )  --> s37;
	  s37( dc37 )  --> s38;
	  s38( dc38 )  --> s39;
	  s39( dc39 )  --> s40;
	  s40( dc40 )  --> s41;
	  s41( dc41 )  --> s42;
	  s42( dc42 )  --> s43;
	  s43( dc43 )  --> s44;
	  s44( dc44 )  --> s45;
	  s45( dc45 )  --> s46;
	  s46( dc46 )  --> s47;
	  s47( dc47 )  --> s48;
	  s48( dc48 )  --> s49;
	  s49( dc49 )  --> s50;
	  s50( dc50 )  --> s51;
	  s51( dc51 )  --> s52;
	  s52( dc52 )  --> s53;
	  s53( dc53 )  --> s54;
	  s54( dc54 )  --> s55;
	  s55( dc55 )  --> s56;
	  s56( dc56 )  --> s57;
	  s57( dc57 )  --> s58;
	  s58( dc58 )  --> s59;
	  s59( dc59 )  --> s60;
	  s60( dc60 )  --> s61;
	  s61( dc61 )  --> s62;
	  s62( dc62 )  --> s63;
	  s63( dc63 )  --> s64;
	  s64( out0 ) --> s65;
	  s65( out1 ) --> s66;
	  s66( out2 ) --> s67;
	  s67( out3 ) --> s68;
	  s68( out4 ) --> s69;
	  s69( out5 ) --> s70;
	  s70( out6 ) --> s71;
	  s71( out7 ) --> s0;
	end
	
	
end