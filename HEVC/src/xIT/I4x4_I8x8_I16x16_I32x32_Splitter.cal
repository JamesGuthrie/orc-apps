// Authors: Eduardo Juarez, Wei Jianguo and Ren Rong <eduardo.juarez@upm.es> of UPM (Spain) 

package xIT;  

actor I4x4_I8x8_I16x16_I32x32_Splitter() int(size=16)  Coef, 
                                         uint(size=16) Mode, 
                                         int(size=7)   Size, 
                                         uint(size=7)  Stride, 
                                         bool          EOF 
                                         ==> 
                                         int(size=16)  Coef_4x4, 
                                         uint(size=16) Mode_4x4, 
                                         uint(size=7)  Stride_4x4,
                                         bool          EOF_4x4,
                                         int(size=16)  Coef_8x8, 
                                         uint(size=7)  Stride_8x8,
                                         bool          EOF_8x8, 
                                         int(size=16)  Coef_16x16, 
                                         uint(size=7)  Stride_16x16,
                                         bool          EOF_16x16,
                                         int(size=16)  Coef_32x32, 
                                         uint(size=7)  Stride_32x32,
                                         bool          EOF_32x32                                        
                                         :
 			
	bool  	DEBUG_L1 := true;
	bool    DEBUG_L2 := true;	
	
	split_4x4: action Coef:    [ coef ] repeat 16, 
	                  Mode:    [ mode ], 
	                  Size:    [ sizeOfTU ], 
	                  Stride:  [ stride ], 
	                  EOF:     [ eof ] repeat 2
	                  ==>
	                  Coef_4x4:   [ coef ] repeat 16, 
	                  Mode_4x4:   [ mode ], 
                      Stride_4x4: [ stride ], 
	                  EOF_4x4:    [ eof ] repeat 2
	guard
	  (eof[0] = false) and (eof[1] = false) and (sizeOfTU = 4) 
	do
		if (DEBUG_L1) then
			println("Splitter ACTION: split_4x4");		
			println("-------------------------");		
			if (DEBUG_L2) then
			  println("mode     = " + mode);
			  println("sizeOfTU = " + sizeOfTU);
			  println("stride   = " + stride);	
			  foreach int i in 0 .. 1 do
			    println("eof    = " + eof[i]);
			  end
			  foreach int i in 0 .. 15 do
			    println("coef     = " + coef[i]);
			  end		  
			  println("-------------------------");			  
			end	
        end			
	end
	
	split_8x8: action Coef:    [ coef ] repeat 64, 
	                  Mode:    [ mode ], 
	                  Size:    [ sizeOfTU ], 
	                  Stride:  [ stride ], 
	                  EOF:     [ eof ] repeat 2
	                  ==>
	                  Coef_8x8:   [ coef ] repeat 64, 
	                  Stride_8x8: [ stride ], 
	                  EOF_8x8:    [ eof ] repeat 2
	guard
	  (eof[0] = false) and (eof[1] = false) and (sizeOfTU = 8) 
	do
		if (DEBUG_L1) then
			println("Splitter ACTION: split_8x8");		
			println("-------------------------");		
			if (DEBUG_L2) then
			  println("mode     = " + mode);
			  println("sizeOfTU = " + sizeOfTU);
			  println("stride   = " + stride);	
			  foreach int i in 0 .. 1 do
			    println("eof    = " + eof[i]);
			  end
			  foreach int i in 0 .. 63 do
			    println("coef     = " + coef[i]);
			  end		  
			  println("-------------------------");			  
			end	
        end			
	end	
	
	split_16x16: action Coef:    [ coef ] repeat 256, 
	                    Mode:    [ mode ], 
	                    Size:    [ sizeOfTU ], 
	                    Stride:  [ stride ], 
                        EOF:     [ eof ] repeat 2
	                    ==>
	                    Coef_16x16:   [ coef ] repeat 256, 
	                    Stride_16x16: [ stride ], 
	                    EOF_16x16:    [ eof ] repeat 2
	guard
	  (eof[0] = false) and (eof[1] = false) and (sizeOfTU = 16) 
	do
		if (DEBUG_L1) then
			println("Splitter ACTION: split_16x16");		
			println("-------------------------");		
			if (DEBUG_L2) then
			  println("mode     = " + mode);
			  println("sizeOfTU = " + sizeOfTU);
			  println("stride   = " + stride);	
			  foreach int i in 0 .. 1 do
			    println("eof    = " + eof[i]);
			  end
			  foreach int i in 0 .. 255 do
			    println("coef     = " + coef[i]);
			  end		  
			  println("-------------------------");			  
			end	
        end			
	end	
	
	split_32x32: action Coef:    [ coef ] repeat 1024, 
	                    Mode:    [ mode ], 
	                    Size:    [ sizeOfTU ], 
	                    Stride:  [ stride ], 
                        EOF:     [ eof ] repeat 2
	                    ==>
	                    Coef_32x32:   [ coef ] repeat 1024, 
	                    Stride_32x32: [ stride ], 
	                    EOF_32x32:    [ eof ] repeat 2
	guard
	  (eof[0] = false) and (eof[1] = false) and (sizeOfTU = 32) 
	do
		if (DEBUG_L1) then
			println("Splitter ACTION: split_32x32");		
			println("-------------------------");		
			if (DEBUG_L2) then
			  println("mode     = " + mode);
			  println("sizeOfTU = " + sizeOfTU);
			  println("stride   = " + stride);	
			  foreach int i in 0 .. 1 do
			    println("eof    = " + eof[i]);
			  end
			  foreach int i in 0 .. 1023 do
			    println("coef     = " + coef[i]);
			  end		  
			  println("-------------------------");			  
			end	
        end			
	end
	
end
