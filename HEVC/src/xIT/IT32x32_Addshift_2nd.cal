// Authors: Eduardo Juarez, Wei Jianguo and Ren Rong <eduardo.juarez@upm.es> of UPM (Spain) 

package xIT;

import xIT.CommonConstant.*;

actor IT32x32_Addshift_2nd () int(size=29) Src  // 29 bits
                              ==> 
                              int(size=30) Dst  // 30 bits                       
                              :
                        
  bool         DEBUG_L1              := false;
  bool         DEBUG_L2              := false;
  int(size=32) DEBUG_nbTransformUnit := 0;
  int(size=32) DEBUG_nbElement       := 0;   
                     
  uint(size=4)                shift_2nd        = SHIFT_INV_2ND - g_uiBitIncrement;                         
  uint(size = shift_2nd)      ROUNDING_FACTOR  = 1 << (shift_2nd - 1); // ROUNDING_FACTOR = 2048

  action Src:[ src ] 
         ==> 
         Dst:[ (src + ROUNDING_FACTOR) >> shift_2nd ] 
  do        
	if (DEBUG_L1) then
      println("IT32x32_AddShift_2nd ACTION");
      println("---------------------------");
      println("TU      = " + DEBUG_nbTransformUnit);
      println("Element = " + DEBUG_nbElement);
      println("---------------------------");      
      if (DEBUG_L2) then
        println("src    = " + src);        		  	
        println("---------------------------"); 
        println("dst    = " + ((src + ROUNDING_FACTOR) >> shift_2nd) );        		  	
        println("---------------------------");             			
      end
      DEBUG_nbElement := (DEBUG_nbElement + 1) mod 1024;  // 1024 elements per TU
      if (DEBUG_nbElement = 0) then 
        DEBUG_nbTransformUnit := DEBUG_nbTransformUnit + 1;
      end        	  
	end 	         
  end
  
end
