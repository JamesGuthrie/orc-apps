// Authors: Eduardo Juarez, Wei Jianguo and Ren Rong <eduardo.juarez@upm.es> of UPM (Spain) 

package xIT;

import xIT.CommonConstant.*;

actor IT16x16_Addshift_1st () int(size=28) Src  // 28 bits
                              ==> 
                              int(size=29) Dst  // 29 bits                       
                              :
                        
  bool         DEBUG_L1              := false;
  bool         DEBUG_L2              := false;
  int(size=32) DEBUG_nbTransformUnit := 0;
  int(size=32) DEBUG_nbElement       := 0;
      
  uint(size=4)            shift_1st        = SHIFT_INV_1ST;                      
  uint(size = shift_1st)  ROUNDING_FACTOR  = 1 << (shift_1st - 1); // ROUNDING_FACTOR = 64

  action Src:[ src ] 
         ==> 
         Dst:[ (src + ROUNDING_FACTOR) >> shift_1st ] 
  do        
	if (DEBUG_L1) then
      println("IT16x16_AddShift_1st ACTION");
      println("---------------------------");
      println("TU      = " + DEBUG_nbTransformUnit);
      println("Element = " + DEBUG_nbElement);
      println("---------------------------");      
      if (DEBUG_L2) then
        println("src    = " + src);        		  	
        println("---------------------------");
        println("dst    = " + ((src + ROUNDING_FACTOR) >> shift_1st) );        		  	
        println("---------------------------");             			
      end
      DEBUG_nbElement := (DEBUG_nbElement + 1) mod 256;  // 256 elements per TU
      if (DEBUG_nbElement = 0) then 
        DEBUG_nbTransformUnit := DEBUG_nbTransformUnit + 1;
      end        	  
	end 	         
  end
  
end
