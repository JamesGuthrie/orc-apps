package xIT;

actor IT4x4_1d () int(size=16) Src 
                  ==> 
                  int(size=16) Dst 
                  :
  List(type:int(size = 8), size = 8) IT4 = [64, 64, 83, 36, 64, -64, 36, -83];

  action Src:[ src ] repeat 4 
         ==> 
         Dst:[ dst[0], dst[1], dst[2], dst[3] ]
  var
   List(type:int(size=16), size=2 ) even,
   List(type:int(size=16), size=2 ) odd,
   List(type:int(size=16), size=4 ) dst
  do
    even := [( src[0] * IT4[0] ) + ( src[2] * IT4[4] ),
             ( src[0] * IT4[1] ) + ( src[2] * IT4[5] )
            ];
           
    odd  := [( src[1] * IT4[2] ) + ( src[3] * IT4[6] ),
             ( src[1] * IT4[3] ) + ( src[4] * IT4[7] )
            ];           

    dst := [ even[0] + odd[0],
             even[1] + odd[1],
             even[1] - odd[1],
             even[0] - odd[0]
           ];
  end

end
