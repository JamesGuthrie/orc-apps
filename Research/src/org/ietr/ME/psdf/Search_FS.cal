package org.ietr.ME.psdf;

actor Search_FS () uint(size=PIX_SZ)  PIX ==>  int(size=32) Id, int(size=8) RW, uint(size=PIX_SZ) VAL, int (size=32) Address, int(size=32) Ref, int(size=32) MV:
	int(size=32) WIDTH = 352;
	int(size=32) HEIGHT = 288;
	int(size=32) MB_SZ = 16;
	int(size=32) dx;
	int(size=32) dy;
	int(size=32) MAX_MOTION = 16;
	uint PIX_SZ = 8;
	int(size=32) wId := 0;
	int rx := 0;
	int ry := 0;
	int wx := -1;
	int wy := 0;
	bool isReady := false;
	bool sendRef := false;
	
 	read_ln : action PIX:[pix] ==> RW:[2], VAL:[pix], Address:[wx, wy], Ref:[wId mod 2]
 	guard
 		isReady = false
 	do
 		wx := wx + 1;
 		
 		if (rx >= WIDTH) then
 			wx := 0;
 			wy := wy + 1;
 		end
 		
 		if (0 =  wy mod MB_SZ ) && (wId > 1) then
 			isReady := true;
 		end
 		
 		if (ry >= HEIGHT) then
 			wx := 0;
 			wy := 0;
 			wId := wId + 1; 			
 			dx := - MAX_MOTION;
 			dy := - MAX_MOTION;
 		end	
 		
 	end
 	
 	curMb: action ==> Id:[wId], RW:[1], Address:[rx, ry, rx + MB_SZ, ry + MB_SZ], Ref:[wId / 2]
 	guard 
 		isReady = true
 	end
 	
 	refWin: action ==> Id:[wId], RW:[1], Address:[rx + dx, ry + dy, rx + MB_SZ + dx, ry + MB_SZ + dy], MV:[dx, dy], Ref:[wId mod 2]
 	guard 
 		sendRef = false,
 		isReady = true
 	do
 		dx := dx + 1;
 		
 		if ((rx + MB_SZ + dx = WIDTH) || (dx = MAX_MOTION)) then
 			dx := - MAX_MOTION;
 			dy :=  dy + 1;
 		end
 		
 		if (rx + dx < 0) then
 			dx := -rx;
 		end 
 		
 		
 		 if (ry + dy < 0) then
 			dy := -ry;
 		end
 		
 		 if ((ry + MB_SZ + dy = HEIGHT) || (dy = MAX_MOTION)) then
 			sendRef := true;
 		end
  	end
  	
  	compdone : action ==> 
  	do
  		rx := rx + MB_SZ;
  		
  		if (rx > WIDTH)  then
  			isReady := false;
  			rx := 0;
  			ry := ry + MB_SZ;
  			
  			if (ry > HEIGHT) then
  				ry := 0;
  			end
  		end
  	end
 	
 	schedule fsm read :
		read        (read_ln ) --> read;
		read        ( curMb ) --> search;
		search      ( refWin ) --> endSearch;
		endSearch   ( compdone ) --> done;
		done        ( curMb ) --> search;
		done        ( read_ln ) --> read;
	end
 	
 end
