package org.ietr.mpeg4.part2.sp.encoder.texture;

import std.util.Math.* ;

actor Quantization () int(size=9) In ==> int(size=9) Out :

	List(type: int(size=9), size=64) qcoef;

	//int(size=6) QP = 4; //1-4 dc_scaler=8(for luminance and chrominance)
	function sign(int x) --> int :
		if x = 0 then
			0
		else
			if x < 0 then
				-1
			else
				1
			end
		end
	end

	/*List(type: uint(size=6), size=64) QMatrix = [ 8, 17, 18, 19, 21, 23, 25, 27,
	17, 18, 19, 21, 23, 25, 27, 28, 20, 21, 22, 23, 24, 26, 28, 30, 21, 22, 23,
	24, 26, 28, 30, 32, 22, 23, 24, 26, 28, 30, 32, 35, 23, 24, 26, 28, 30, 32,
	35, 38, 25, 26, 28, 30, 32, 35, 38, 41, 27, 28, 30, 32, 35, 38, 41, 45 ];*/
	action In:[ tcoef ] repeat 64 ==> Out:[ qcoef ] repeat 64
	do //DC coefficient
		qcoef[0] := tcoef[0]; //>> 3; //(division par 8)//MPEG quantization
		//H.263 quantization
		foreach int i in 1 .. 63 do
			qcoef[i] := sign(tcoef[i]) * (abs(tcoef[i]) >> 3);
		end
	end

end