/*
 * Copyright (c) 2011, INSA of Rennes
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 *   * Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *   * Neither the name of the INSA of Rennes nor the names of its
 *     contributors may be used to endorse or promote products derived from this
 *     software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
  
// Author: by Jerome Gorin IETR/INSA of Rennes (France)

package org.ietr.motionEstimation.dpn;

actor extract_y () uint(size=8) YUV ==> uint(size=PIX_SZ)  PIX, int(size=32) W:

 // Port size declaration
	uint PIX_SZ = 8;

	int WIDTH = 352;
	
	int HEIGHT = 288;
	
	int(size=32) cnt := 0;

	sendPic: action YUV:[ yuv ] ==> PIX:[ yuv ], W:[1]
	guard
		cnt < WIDTH * HEIGHT
	do
		cnt := cnt + 1;
	end
	
	skipPic: action YUV:[ yuv ] ==> PIX:[ yuv ], W:[0]
	do
		if (cnt = WIDTH * HEIGHT + 2* WIDTH * HEIGHT / 4 - 1) then
			cnt := 0;
		end
	end

	priority
		 sendPic > skipPic;
	end
		
end
