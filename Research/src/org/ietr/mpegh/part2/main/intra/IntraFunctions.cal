package org.ietr.mpegh.part2.main.intra;
import std.util.Math.*;

unit  IntraFunctions :

	procedure intraPlanarPred0(uint(size=8) src[64 * 64], uint(size=8) top[129] , uint(size=8) left [129], 
		int  stride)
	begin
		foreach uint y in 0 .. 4-1
		do
			foreach uint x in 0 .. 4-1
			do
				src[x + y * stride] := ((3 - x) * left[y + 1] + (x + 1) * top[5] + (3 - y) * top[x + 1]  + (y + 1) * left[5] + 4) >> 3;
			end
		end
	end
	
	procedure intraPlanarPred1(uint(size=8) src[64 * 64], uint(size=8) top[129] , uint(size=8) left [129], 
		int  stride)
	begin
		foreach uint y in 0 .. 8-1
		do
			foreach uint x in 0 .. 8-1
			do
				src[x + y * stride] := ((7 - x) * left[y + 1] + (x + 1) * top[9] + (7 - y) * top[x + 1]  + (y + 1) * left[9] + 8) >> 4;
			end
		end
	end
	
	procedure intraPlanarPred2(uint(size=8) src[64 * 64], uint(size=8) top[129] , uint(size=8) left [129], 
		int  stride)
	begin
		foreach uint y in 0 .. 16-1
		do
			foreach uint x in 0 .. 16-1
			do
				src[x + y * stride] := ((15 - x) * left[y + 1] + (x + 1) * top[17]  + (15 - y) * top[x + 1]  + (y + 1) * left[17] + 16) >> 5;
			end
		end
	end
	
	procedure intraPlanarPred3(uint(size=8) src[64 * 64], uint(size=8) top[129] , uint(size=8) left [129], 
		int  stride)
	begin
		foreach uint y in 0 .. 32-1
		do
			foreach uint x in 0 .. 32-1
			do
				src[x + y * stride] := ((31 - x) * left[y + 1] + (x + 1) * top[33]  + (31 - y) * top[x + 1]  + (y + 1) * left[33] + 32) >> 6;
			end
		end
	end
	
//	procedure intraPlanarPred_generic(uint(size=8) src[64 * 64], uint(size=8) top[129] , uint(size=8) left [129], 
//		int  stride, int trafoSize)
//	var
//		int size_ := 1 << trafoSize
//	begin
//		foreach uint y in 0 .. size_-1
//		do
//			foreach uint x in 0 .. size_-1
//			do
//				src[x + y * stride] := ((size_ - 1 - x) * left[y + 1] + (x + 1) * top[size_ + 1] + (size_ - 1 - y) * top[x + 1]  + (y + 1) * left[size_ + 1] + size_) >> (trafoSize + 1);
//			end
//		end
//	end
	
	
	

end