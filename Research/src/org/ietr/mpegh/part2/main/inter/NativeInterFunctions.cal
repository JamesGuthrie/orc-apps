package org.ietr.mpegh.part2.main.inter;

import std.util.Math.*;
import org.ietr.mpegh.part2.main.inter.InterFunctions.*;

unit NativeInterFunctions : 

	@native function openHEVCIsPresent() --> bool
	end
	
	@native procedure put_hevc_qpel_pixel_orcc(int(size=16) dst [ 2 ] [ 64 * 64 ], uint(size=2) listIdx,
									  uint(size=8) src [ 71 * 71 ], uint(size=7) srcStride,
									  int width, int height)
	end	
	
	@native procedure put_hevc_epel_pixel_orcc(int(size=16) dst [ 2 ] [ 64 * 64 ], uint(size=2) listIdx,
									  uint(size=8) src [ 71 * 71 ], uint(size=7) srcStride,
									  int width, int height)
	end	
	
	@native procedure put_hevc_qpel_h_orcc(int(size=16) predSamples [ 2 ] [64*64], uint(size=2) listIdx,
											uint(size=8) refSamples [ (64 + 7)*( 64 + 7) ], uint (size=7) predCuSize,
											int filterIdx, uint(size=7) width, uint(size=7) height)
	end			
	
	@native procedure put_hevc_qpel_v_orcc(int(size=16) predSamples [ 2 ] [64*64], uint(size=2) listIdx,
											uint(size=8) refSamples [ (64 + 7)*( 64 + 7) ], uint (size=7) predCuSize,
											int filterIdx, uint(size=7) width, uint(size=7) height)
	end	
	
	@native procedure put_hevc_epel_h_orcc(int(size=16) predSamples [ 2 ] [64*64], uint(size=2) listIdx,
											uint(size=8) refSamples [ (64 + 7)*( 64 + 7) ], uint (size=7) predCuSize,
											int filterIdx, uint(size=7) width, uint(size=7) height)
	end			
	
	@native procedure put_hevc_epel_v_orcc(int(size=16) predSamples [ 2 ] [64*64], uint(size=2) listIdx,
											uint(size=8) refSamples [ (64 + 7)*( 64 + 7) ], uint (size=7) predCuSize,
											int filterIdx, uint(size=7) width, uint(size=7) height)
	end		
	
	@native procedure put_hevc_qpel_hv_orcc(int(size=16) predSamples [ 2 ] [64*64], uint(size=2) listIdx,
											uint(size=8) refSamples  [ (64 + 7)*( 64 + 7) ], uint (size=7) predCuSize, int filterIdx[2],
											 uint(size=7) width, uint(size=7) height)
	end	
	
	@native procedure put_hevc_epel_hv_orcc(int(size=16) predSamples [ 2 ] [64*64], uint(size=2) listIdx,
											uint(size=8) refSamples [ (64 + 7)*( 64 + 7) ], uint (size=7) predCuSize, int filterIdx[2],
											 uint(size=7) width, uint(size=7) height)
	end				 

	procedure hevc_qpel_pixel(int(size=16) predSamples [ 2 ] [ 64 * 64 ], uint(size=2) listIdx,
		uint(size=8) refSamples [ (64 + 7)*( 64 + 7) ], uint (size=7) predCuSize, uint(size=7) width, uint(size=7) height )
	begin
		if openHEVCIsPresent() then
			put_hevc_qpel_pixel_orcc(predSamples, listIdx, refSamples, predCuSize, width, height);
		else
			put_hevc_qpel_pixel_cal(predSamples, listIdx, refSamples, predCuSize, width, height);
		end
	end
	
	procedure hevc_epel_pixel(int(size=16) predSamples [ 2 ] [ 64 * 64 ], uint(size=2) listIdx,
		uint(size=8) refSamples [ (64 + 7)*( 64 + 7) ], uint (size=7) predCuSize, uint(size=7) width, uint(size=7) height )
	begin
		if openHEVCIsPresent() then
			put_hevc_epel_pixel_orcc(predSamples, listIdx, refSamples, predCuSize, width, height);
		else
			put_hevc_epel_pixel_cal(predSamples, listIdx, refSamples, predCuSize, width, height);
		end
	end
	
	procedure hevc_qpel_h(int(size=16) predSamples [ 2 ] [64*64], uint(size=2) listIdx,
		uint(size=8) refSamples  [ (64 + 7)*( 64 + 7) ], uint (size=7) predCuSize, int filterIdx, uint(size=7)
		width, uint(size=7) height)
	begin
		if openHEVCIsPresent() then
			put_hevc_qpel_h_orcc(predSamples, listIdx, refSamples, predCuSize, filterIdx, width, height);
		else
			put_hevc_qpel_h_cal(predSamples, listIdx, refSamples, predCuSize, filterIdx, width, height);
		end
	end
	
	procedure hevc_qpel_v(int(size=16) predSamples [ 2 ] [64*64], uint(size=2) listIdx,
		uint(size=8) refSamples [ (64 + 7)*( 64 + 7) ], uint (size=7) predCuSize, int filterIdx, uint(size=7)
		width, uint(size=7) height)
	begin
		if openHEVCIsPresent() then
			put_hevc_qpel_v_orcc(predSamples, listIdx, refSamples, predCuSize, filterIdx, width, height);
		else
			put_hevc_qpel_v_cal(predSamples, listIdx, refSamples, predCuSize, filterIdx, width, height);
		end
	end
	
	procedure hevc_epel_h(int(size=16) predSamples [ 2 ] [64*64], uint(size=2) listIdx,
		uint(size=8) refSamples [ (64 + 7)*( 64 + 7) ], uint (size=7) predCuSize, int filterIdx, uint(size=7)
		width, uint(size=7) height)
	begin
		if openHEVCIsPresent() then
			put_hevc_epel_h_orcc(predSamples, listIdx, refSamples, predCuSize, filterIdx, width, height);
		else
			put_hevc_epel_h_cal(predSamples, listIdx, refSamples, predCuSize, filterIdx, width, height);
		end
	end
	
	procedure hevc_epel_v(int(size=16) predSamples [ 2 ] [64*64], uint(size=2) listIdx,
		uint(size=8) refSamples [ (64 + 7)*( 64 + 7) ], uint (size=7) predCuSize, int filterIdx, uint(size=7)
		width, uint(size=7) height)
	begin
		if openHEVCIsPresent() then
			put_hevc_epel_v_orcc(predSamples, listIdx, refSamples, predCuSize, filterIdx, width, height);
		else
			put_hevc_epel_v_cal(predSamples, listIdx, refSamples, predCuSize, filterIdx, width, height);
		end
	end
	
	procedure hevc_qpel_hv(int(size=16) predSamples [ 2 ] [64*64], uint(size=2) listIdx,
		uint(size=8) refSamples [ (64 + 7)*( 64 + 7) ], uint (size=7) predCuSize, int filterIdx[2], uint(size=7)
		width, uint(size=7) height)
	begin
		if openHEVCIsPresent() then
			put_hevc_qpel_hv_orcc(predSamples, listIdx, refSamples, predCuSize, filterIdx, width, height);
		else
			put_hevc_qpel_hv_cal(predSamples, listIdx, refSamples, predCuSize, filterIdx, width, height);
		end
	end
	
	procedure hevc_epel_hv(int(size=16) predSamples [ 2 ] [64*64], uint(size=2) listIdx,
		uint(size=8) refSamples [ (64 + 7)*( 64 + 7) ], uint (size=7) predCuSize, int filterIdx[2], uint(size=7)
		width, uint(size=7) height)
	begin
		if openHEVCIsPresent() then
			put_hevc_epel_hv_orcc(predSamples, listIdx, refSamples, predCuSize, filterIdx, width, height);
		else
			put_hevc_epel_hv_cal(predSamples, listIdx, refSamples, predCuSize, filterIdx, width, height);
		end
	end
	
end