package org.ietr.mpegh.part2;

import std.util.Math.*;

unit SelectCuFunctions : 
  @optimize_c(condition="SSE_ENABLE", name="add_8_16_clip_8_orcc")
  procedure add_8_16_clip_8_cal (
  	uint(size=8) predSample[8],
    int(size=9) resSample[8],
    uint(size=8) sample[8])
  begin
    foreach int i in 0 .. 8-1
      do
	 	sample[i] := clip_i32(predSample[i]+resSample[i], 0, 255);
      end
  end
  
  @optimize_c(condition="SSE_ENABLE", name="add_8_16_clip_16_orcc")
  procedure add_8_16_clip_16_cal (
  	uint(size=8) predSample[16],
    int(size=9) resSample[16],
    uint(size=8) sample[16])
  begin
    foreach int i in 0 .. 16-1
      do
	 	sample[i] := clip_i32(predSample[i]+resSample[i], 0, 255);
      end
  end
  
  @optimize_c(condition="SSE_ENABLE", name="add_8_16_clip_24_orcc")
  procedure add_8_16_clip_24_cal (
  	uint(size=8) predSample[24],
    int(size=9) resSample[24],
    uint(size=8) sample[24])
  begin
    foreach int i in 0 .. 24-1
      do
	 	sample[i] := clip_i32(predSample[i]+resSample[i], 0, 255);
      end
  end
  
  @optimize_c(condition="SSE_ENABLE", name="add_8_16_clip_32_orcc")
  procedure add_8_16_clip_32_cal (
  	uint(size=8) predSample[32],
    int(size=9) resSample[32],
    uint(size=8) sample[32])
  begin
    foreach int i in 0 .. 32-1
      do
	 	sample[i] := clip_i32(predSample[i]+resSample[i], 0, 255);
      end
  end
  
  @optimize_c(condition="SSE_ENABLE", name="add_8_16_clip_64_orcc")
  procedure add_8_16_clip_64_cal (
  	uint(size=8) predSample[64],
    int(size=9) resSample[64],
    uint(size=8) sample[64])
  begin
    foreach int i in 0 .. 64-1
      do
	 	sample[i] := clip_i32(predSample[i]+resSample[i], 0, 255);
      end
  end
  
  @optimize_c(condition="SSE_ENABLE", name="add_8_16_clip_16_pred1616_orcc")
  procedure add_8_16_clip_16_pred1616_cal (
  	uint(size=8) predSample[16][16][16],
    int(size=9) resSample[16],
    uint(size=8) sample[16],
    uint(size=16) idx0,
    uint(size=16) idx1)
  begin
    foreach int i in 0 .. 16-1
      do
	 	sample[i] := clip_i32(predSample[idx0][idx1][i]+resSample[i], 0, 255);
      end
  end

  // DR 1402: use SSE optimized procedure if available
  @optimize_c(condition="SSE_ENABLE", name="copy_8_8_16_output1616_orcc")
  procedure copy_8_8_16_output1616_cal(
  	  uint(size=8) interSample[16],
	  uint(size=8) interSamp[16][16][16],
	  uint(size=5) xIdx,
	  uint(size=32) xOff,
	  uint(size=5) yIdx,
	  uint(size=32) yOff)
  begin
	  foreach uint i in 0 .. 16-1
	    do
		  interSamp[xIdx+xOff][yIdx+yOff][i] := interSample[i];
	    end
  end
end