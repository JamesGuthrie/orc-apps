package fr.irisa.compa.gecos;
import  std.stdio.Source.*;
import fr.irisa.common.Simulation.*;

	actor matMultiplication_gather_manual()  	int(size=32) Port_tmpBuffer_output_part_0 	,	int(size=32) Port_tmpBuffer_output_part_1 	  ==>
			 	   :
					
		int state := 1;
		int N = 128;//1024;
		int TS = 64;
		int output[N*N];
		
	gather: action  Port_tmpBuffer_output_part_0:[tmpBuffer_output_part_0] repeat N*N/2	,	
					Port_tmpBuffer_output_part_1:[tmpBuffer_output_part_1] repeat N*N/2	 ==>
					
	guard
		state = 1 
	var
		
	
		int index_1,
		int index_0
	do 
		
		
		index_0 := 0;
		index_1 := 0;
		
		foreach int i in 0 .. ((N/(2*TS))-1) do
			foreach int k in 0 .. TS-1 do
				foreach int j in 0 ..(N-1) do
					output[(TS*i*2+k)*N+j] := tmpBuffer_output_part_0[index_0];
					index_0 := index_0 + 1;
				end
			end
			foreach int k in 0 .. TS-1 do
				foreach int j in 0 .. (N-1) do
				 	output[(TS*(2*i+1)+k)*N+j] := tmpBuffer_output_part_1[index_1];
					index_1 := index_1 + 1;
				end
			end
		end
		
		state := 1;
	end //compute Action
	
end //Actor
