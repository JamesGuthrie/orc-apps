package fr.irisa.compa.gecos;
import  std.stdio.Source.*;
import fr.irisa.common.Simulation.*;

actor generateArrayBlock () ==> uint(size=32) token, uint(size=32) token1 :

	int i_0 := 0;
	int i_1 := 0;
	int val := 0;
	int N = 64;
	int TS = 8;
	int NUM_BLOCKS = (N*N)/(TS*TS);
	int input[N*N];
	int state := 0;
	int done_sending_1 := 0;
	int done_sending_2 := 0;
	
 	a: action ==>
	guard
		state = 0 
	do
		println("Initializing data");
		val := 0;
		foreach int j in 0 .. N -1 do
			foreach int k in 0 .. N-1 do
				input[j*N+k] := val;
				if ( val < 9 ) then
					val := val + 1;
				else
					val := 0;
				end
			end
		end
		state := 1;
	end 
	
	b: action ==> token:[ t ] repeat TS * TS
	guard
		state = 1 && done_sending_1 = 0
	var
		uint(size=32) t[TS*TS]
	do
		println("Sending Block " + i_0);
		foreach int j in 0 .. TS*TS-1 do
			t[j] := input[i_0*(TS*TS)+j];
		end
		i_0 := i_0 + 1;
		if ( i_0 = NUM_BLOCKS) then
			done_sending_1 := 1;
			i_0 := 0;
		end
		//println("Pushing " + i);
	end
	
	c: action ==> token1:[t1] repeat TS * TS
	guard
		state = 1 && done_sending_2 = 0
	var
		uint(size=32) t1[TS*TS]
	do
		println("Sending Block " + i_1);
		foreach int j in 0 .. TS*TS-1 do
			t1[j] := input[i_1*(TS*TS)+j];
		end
		i_1 := i_1 + 1;
		if ( i_1 = NUM_BLOCKS) then
			done_sending_2 := 1;
			i_1 := 0;
		end
		//println("Pushing " + i);
	end
	
	action ==>
	guard
		done_sending_1 = 1 && done_sending_2 = 1 
	do
		done_sending_1 := 0;
		done_sending_2 := 0;
		state := 2;
	end

end