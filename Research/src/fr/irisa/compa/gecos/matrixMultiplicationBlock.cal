package fr.irisa.compa.gecos;


actor matrixMultiplicationBlock () int(size=32) inputA, int(size=32) inputB ==> int(size=32) output :

	int N = 64;
	int TS = 8;
	int NUM_BLOCKS = (N*N)/(TS*TS);
	int state := 0;
	int inArrayA[N*N];
	int inArrayB[N*N];
	int outArray[N*N];
	int blockNum := 0;
	
	action inputA:[blockA] repeat TS*TS, inputB:[blockB] repeat TS * TS ==> 
	guard
		state = 0
	do
		println("Receiving Block " + blockNum);
		foreach int i in 0 .. TS*TS-1 do
			inArrayA[blockNum*(TS*TS)+i] := blockA[i];
			inArrayB[blockNum*(TS*TS)+i] := blockB[i];
		end
		blockNum := blockNum + 1;
		if ( blockNum = NUM_BLOCKS ) then
			state := 1;
		end
	end

	action  ==>
	guard
		state = 1  
	do
	
		foreach  int i in 0 .. N -1 
		do
			foreach int j in 0 .. N - 1
			do
				foreach int k in 0 .. N - 1
				do 
					if ( k > 0 ) then
						outArray[i*N+j] := outArray[i*N+j] +  inArrayA[i*N+k] * inArrayB[k*N+j];	
					else
						outArray[i*N+j] := inArrayA[i*N+k] * inArrayB[k*N+j]; 
					end
				end			 
			end
		end
		blockNum := 0;
		state := 2;
	end
	
	action ==> output:[out] repeat TS*TS
	guard
		state = 2
	var 
		int out[TS*TS]
	do
		
		foreach int i in 0 .. TS*TS -1 do
			out[i] := outArray[blockNum*TS*TS+i];
		end
		if ( blockNum = NUM_BLOCKS ) then
			blockNum := 0;
			state := 0;
		end
	end

end