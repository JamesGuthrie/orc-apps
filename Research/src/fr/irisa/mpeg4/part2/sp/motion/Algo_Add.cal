// Algo_Add.cal
//
// Author: David B. Parlour (dave.parlour@xilinx.com)
// Modified by: Christophe Lucarz (christophe.lucarz@epfl.ch)
// Modified by: Herve Yviquel
//
// Copyright (c) 2004-2005 Xilinx Inc.
// All Rights Reserved
//
// Disclaimer:  THIS PROGRAM IS PROVIDED "AS IS" WITH NO WARRANTY 
//              WHATSOEVER AND XILINX SPECIFICALLY DISCLAIMS ANY 
//              IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//              A PARTICULAR PURPOSE, OR AGAINST INFRINGEMENT.
// Add motion and texture to produce pixels

package fr.irisa.mpeg4.part2.sp.motion;

import org.sc29.wg11.mpeg4.part2.Constants.*;
import org.ietr.mpeg4.part2.sp.ConstantsBtype.*;

actor Algo_Add () 
	int(size=PIX_SZ) MOT, int(size=PIX_SZ) TEX, int(size=BTYPE_SZ) BTYPE
		==> 
	int(size=PIX_SZ) VID :

	// Ignore new VOP command
	cmd.newVop: action BTYPE:[ cmd ] ==>
	guard
		(cmd & NEWVOP) != 0
	end

	// Pure texture
	cmd.textureOnly: action BTYPE:[ cmd ] ==>
	guard
		(cmd & INTRA) != 0
	end

	// Pure motion
	cmd.motionOnly: action BTYPE:[ cmd ] ==>
	guard
		(cmd & ACCODED) = 0
	end

	// Mixed texture and motion
	// (Also used to skip vop w,h)
	cmd.other: action BTYPE:[ cmd ] ==>
	end

	texture: action TEX:[ tex ] repeat 64 ==> VID:[ tex ] repeat 64
	end

	motion: action MOT:[ mot ] repeat 64 ==> VID:[ mot ] repeat 64
	end

	combine: action MOT:[ mot ] repeat 64, TEX:[ tex ] repeat 64 ==> VID:[ vid ] repeat 64
	var
		int(size=PIX_SZ) vid[64],
		int(size=PIX_SZ) add
	do
		foreach int i in 0 .. 63 do
			add := tex[i] + mot[i];
			vid[i] := if add < 0 then 0 elsif add > 255 then 255 else add end;
		end
	end

	schedule fsm cmd :
		cmd ( cmd.newVop ) --> skipw;
		cmd ( cmd.textureOnly ) --> texture;
		cmd ( cmd.motionOnly ) --> motion;
		cmd ( cmd.other ) --> combine;
		texture ( texture ) --> cmd;
		motion ( motion ) --> cmd;
		combine ( combine ) --> cmd;
		skipw ( cmd.other ) --> skiph;
		skiph ( cmd.other ) --> cmd;
	end

	priority
		cmd.newVop > cmd.textureOnly > cmd.motionOnly > cmd.other;
	end

end