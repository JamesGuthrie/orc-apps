package ch.epfl.mpeg4.part2;

actor BlockExpand () int(size=8) RUN, int(size=13) VALUE,
bool LAST ==> int(size=13) QFS :

	int(size=8) count;

	int(size=13) qfs[64];
	
	init: action ==>
	do
		qfs := [0 : for int i in 0 .. 63];
		count := 0;
	end

	last: action RUN:[ run ], VALUE:[ value ], LAST:[ last ]  ==> QFS:[ qfs ] repeat 64
	guard last
	do
		qfs[count + run] := value;
	end

	read: action RUN:[ run ], VALUE:[ value ], LAST:[ last ] ==>
	do
		qfs[count + run] := value;
		count := count + run + 1;
	end
		
	schedule fsm init :
		init (init) --> read;
		read (read) --> read;
		read (last) --> init;
	end
	
	priority last > read; end

end