package ch.epfl.parser.svc;

actor blackHoleSvcParser()
	bool Direct8x8Inf,
	uint(size=31) MaxFrameNum,
	uint(size=5)  NumRefFrame,
	uint(size=8)  MaxDpbSize,
	uint(size=16) CodedBlockPattern,
	bool          ConstrainedIFlag,
	uint(size=13) CurrMbAddr,
	bool          DirectSpatialMvPred,
	uint(size=31) FrameNum,
	int(size=16)  Height,
	uint(size=8)  IPCM_U,
	uint(size=8)  IPCM_V,
	uint(size=8)  IPCM_Y,
	uint(size=4)  IntraPredMode,
	uint(size=4)  IntraPredModeC,
	uint(size=2)  LFDisable,
	bool          CavlcLast,
	uint(size=6)  MacroBlockType,
	uint(size=1)  MbIntraFlag,
	uint(size=7)  Mblocation,
	uint(size=4)  MbPredRefIdxL0,
	uint(size=4)  MbPredRefIdxL1,
	int(size=16)  MbPredMvResL0,
	int(size=16)  MbPredMvResL1,
	uint(size=6)  MbType4Pred,
	uint(size=31) Mmco,
	uint(size=5)  NbRefFrameL0,
	uint(size=5)  NbRefFrameL1,
	bool          NeighbourAvail,
	bool          NewPic,
	uint(size=32) Poc,
	uint(size=7)  PicWidthInMb,
	int(size=8)   QP_Y,
	int(size=8)   QP_Cb,
	int(size=8)   QP_Cr,
	uint(size=2)  RefList0Type,
	uint(size=2)  RefList1Type,
	uint(size=31) RefReorderingL0,
	uint(size=31) RefReorderingL1,
	uint(size=4)  CavlcRun,
	int(size=8)   ScalingList,
	uint(size=4)  SubMbPredRefIdxL0,
	uint(size=4)  SubMbPredRefIdxL1,
	int(size=16)  SubmbPredMvResL0,
	int(size=16)  SubmbPredMvResL1,
	uint(size=4)  SubMbType,
	int(size=12)  CavlcValue,
	int(size=16)  Width,
	int(size=6)   sliceAlpha,
	int(size=6)   sliceBeta
		==>
		:

	ax: action sliceBeta:[qw] ==>
	end

	aw: action sliceAlpha:[qw] ==>
	end

	av: action Width:[qw] ==>
	end

	au: action CavlcValue:[qw] ==>
	end

	at: action SubMbType:[qw] ==>
	end

	as: action SubmbPredMvResL1:[qw] ==>
	end

	ar: action SubmbPredMvResL0:[qw] ==>
	end

	aq: action SubMbPredRefIdxL1:[qw] ==>
	end

	ap: action SubMbPredRefIdxL0:[qw] ==>
	end

	ao: action ScalingList:[qw] ==>
	end

	an: action CavlcRun:[qw] ==>
	end

	am: action RefReorderingL1:[qw] ==>
	end

	al: action RefReorderingL0:[qw] ==>
	end

	ak: action RefList1Type:[qw] ==>
	end

	aj: action RefList0Type:[qw] ==>
	end

	ai: action QP_Cr:[qw] ==>
	end

	ah: action QP_Cb:[qw] ==>
	end

	ag: action QP_Y:[qw] ==>
	end

	af: action PicWidthInMb:[qw] ==>
	end

	ae: action Poc:[qw] ==>
	end

	ad: action NewPic:[qw] ==>
	end

	ac: action NeighbourAvail:[qw] ==>
	end

	ab: action NbRefFrameL1:[qw] ==>
	end

	aa: action NbRefFrameL0:[qw] ==>
	end

	z: action Mmco:[qw] ==>
	end

	y: action MbType4Pred:[qw] ==>
	end

	x: action MbPredMvResL1:[qw] ==>
	end

	w: action MbPredMvResL0:[qw] ==>
	end

	v: action MbPredRefIdxL1:[qw] ==>
	end

	u: action MbPredRefIdxL0:[qw] ==>
	end

	t: action Mblocation:[qw] ==>
	end

	s: action MbIntraFlag:[qw] ==>
	end

	r: action MacroBlockType:[qw] ==>
	end

	q: action CavlcLast:[qw] ==>
	end

	p: action LFDisable:[qw] ==>
	end

	o: action IntraPredModeC:[qw] ==>
	end

	n: action IntraPredMode:[qw] ==>
	end

	m: action IPCM_Y:[qw] ==>
	end

	l: action IPCM_V:[qw] ==>
	end

	k: action IPCM_U:[qw] ==>
	end

	j: action Height:[qw] ==>
	end

	bi: action FrameNum:[qw] ==>
	end

	h: action DirectSpatialMvPred:[qw] ==>
	end

	g: action CurrMbAddr:[qw] ==>
	end

	f: action ConstrainedIFlag:[qw] ==>
	end

	e: action CodedBlockPattern:[qw] ==>
	end

	d: action MaxDpbSize:[qw] ==>
	end

	c: action NumRefFrame:[qw] ==>
	end

	b: action MaxFrameNum:[qw] ==>
	end

	a: action Direct8x8Inf:[qw] ==>
	end
end