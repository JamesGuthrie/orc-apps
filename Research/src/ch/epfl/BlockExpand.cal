package ch.epfl;

actor BlockExpand () int(size=8) RUN, int(size=13) VALUE,
bool LAST ==> int(size=13) QFS :

	int(size=8) count := 0;

	bool last := false;
	
	int(size=13) qfs[64];
	
	write: action ==> QFS:[ qfs ] repeat 64
	guard last
	end

	read: action RUN:[ r ], VALUE:[ v ], LAST:[ l ] ==>
	do
		qfs[count + r] := v;
		count := count + r + 1;
		last := l;
	end
	
	reset: action ==>
	do
		qfs := [0 : for int i in 0 .. 63];
		last:= false;
		count := 0;
	end
		
	schedule fsm s0 :
	s0 (read) --> s0;
	s0 (write) --> s1;
	s1 (reset) --> s0;
	end
	
	priority write > read; end

end