/**
 * This FU is part of the testbed of a CAL implementation of Blowfish.
 * It sends a key, a sequence of ciphertext and the golden response (plaintext) to the Blowfish decipher for testing purpose.
 * 
 * FU ID: Source_Blowfish_Encipher
 * Three output ports:
 * 		1) uint(size=8) OP1_Key: the key
 * 		2) uint(size=8) OP2_CT: the ciphertext
 * 		3) uint(size=8) OP3_GR: the golden response
 *
 * Developers: Junaid Jameel Ahmad @ Uni-Konstanz 2011
 */

package Block_Ciphers.Blowfish;

actor Source_Blowfish_Decipher () ==> uint(size=8) OP1_Key, uint(size=8) OP2_CT, uint(size=8) OP3_GR :
/*
	int KEY_SIZE = 8;
	List(type:uint(size=8), size=KEY_SIZE) k = [ // Key
		0xFE,0xDC,0xBA,0x98,0x76,0x54,0x32,0x10
	];
	int TEXT_SIZE = 8;
	List(type:uint(size=8), size=TEXT_SIZE) c = [ // Ciphertext: Single block
		0x0A,0xCE,0xAB,0x0F,0xC6,0xA0,0xA2,0x8D
	];
	List(type:uint(size=8), size=TEXT_SIZE) gr = [ // Golden response (Plaintext)
		0x01,0x23,0x45,0x67,0x89,0xAB,0xCD,0xEF
	];*/

	// Test vectors for Blowfish;
	int KEY_SIZE = 7;
	List(type:uint(size=8), size=KEY_SIZE) k = [ // Key
		0x54,0x45,0x53,0x54,0x4b,0x45,0x59
	];
 
	int TEXT_SIZE = 8;
	List(type:uint(size=8), size=TEXT_SIZE) c = [ // Ciphertext: Single block
		0xDF,0x33,0x3F,0xD2,0x30,0xA7,0x1B,0xB4 
	];
	List(type:uint(size=8), size=TEXT_SIZE) gr = [ // Golden response (Plaintext)
		0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x02
	];
 
	bool keySizeSent := false;
	sendKeySize:
	action ==> OP1_Key:[KEY_SIZE]
	guard not keySizeSent 
	do
		keySizeSent := true;
	end
	
	bool keySent := false;
	sendKey:
	action ==> OP1_Key:[k] repeat KEY_SIZE
	guard keySizeSent and not keySent 
	do
		keySent := true;
	end
	
	bool ctSent := false;
	sendPT:
	action ==> OP2_CT:[c] repeat TEXT_SIZE
	guard not ctSent 
	do
		ctSent := true;
	end

	bool grSent := false;
	sendGR:
	action ==> OP3_GR:[gr] repeat TEXT_SIZE
	guard not grSent 
	do
		grSent := true;
	end
end
