/**
 * This FU generates test data to simulate the client's side of the SKID3 user authentication protocol. 
 * It sends test key for the PRG, the keys to be used for HMAC operations, the hash size of the hashing 
 * operation used in the HMAC and the test server's data (the nounce rS and the HMAC H1).
 * 
 * FU ID: Client_Source
 * Four output ports:
 *   1) uint(size=8) OP1_PRG_Key: the key for the client's PRG. 
 *   2) uint(size=8) OP2_HMAC_Key: the keys for the HMAC operations.
 *	 3) int(size=8) OP3_Hash_Size: the size of output hash (message digest) of SHA-256 in bytes.
 *   4) uint(size=8) OP4_Channel: the channel to send the test server's data.
 * 
 * Developer: Junaid Jameel Ahmad @ Uni-Konstanz 2012
 * Last Modified: 13.04.2012
 */
 
package Protocols.Authentication.SKID3;

actor Client_Source() ==> uint(size=8) OP1_PRG_Key, uint(size=8) OP2_HMAC_Key, int(size=8) OP3_Hash_Size, uint(size=8) OP4_Channel:

	int PRG_KEY_SIZE = 4;
	// PRG Key Server
	List(type:uint(size=8), size=PRG_KEY_SIZE+1) PRG_KEY = [PRG_KEY_SIZE, 0x4a, 0x65, 0x66, 0x65];


	bool keySent4PRG := false;
	sendKey4PRG:
	action ==> OP1_PRG_Key:[PRG_KEY] repeat PRG_KEY_SIZE+1  
	guard not keySent4PRG
	do
		keySent4PRG := true;
	end
		
	int HMAC_KEY_SIZE = 4;
	// HMAC Key
	List(type:uint(size=8), size=HMAC_KEY_SIZE+1) HMAC_KEY = [HMAC_KEY_SIZE, 0x4a, 0x65, 0x66, 0x65];	

	bool HMACkeySent1 := false;
	sendHMACKey1:
	action ==> OP2_HMAC_Key:[HMAC_KEY] repeat HMAC_KEY_SIZE+1
	guard not HMACkeySent1
	do
		HMACkeySent1 := true;
	end

	bool HMACkeySent2 := false;
	sendHMACKey2:
	action ==> OP2_HMAC_Key:[HMAC_KEY] repeat HMAC_KEY_SIZE+1
	guard not HMACkeySent2
	do
		HMACkeySent2 := true;
	end

	bool hashSizeSent := false;
	sendHashSize:
	action ==> OP3_Hash_Size:[32] // The size of hash generated by SHA-256 in bytes.  
	guard not hashSizeSent
	do
		hashSizeSent := true;
	end	

	bool serverDataSent := false;
	sendServerData:
	action ==> OP4_Channel:[0xc4, // server's nounce rS -- 1 byte
	 // server's HMAC H1 -- 32 bytes (256 bits).
	 0x99,0xe6,0xc6,0xcb, 0xf7,0xf6,0x41,0x30, 0x35,0x94,0x7c,0x0a, 0x51,0xd1,0xf3,0x58,
	 0xa4,0x35,0x06,0x4f, 0x6e,0x13,0x85,0x6f, 0xc5,0x71,0xde,0xac, 0xb1,0xa8,0x93,0x0d] 
	guard not serverDataSent
	do
		serverDataSent := true;
	end	
	
end
