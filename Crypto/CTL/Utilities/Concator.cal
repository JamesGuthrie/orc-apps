package Utilities;

actor Concator() uint(size=64) IP1_S1Size, uint(size=8) IP2_S1, uint(size=64) IP3_S2Size, uint(size=8) IP4_S2
	==> 
	uint(size=64) OP1_Size, uint(size=8) OP2_S:

	int(size=64) counter := 0; 
	uint(size=64) s1Size := 0;
	uint(size=64) s2Size := 0;
	
	int step_index := 1;
	getSizes:
	action IP1_S1Size:[s1], IP3_S2Size:[s2] ==> OP1_Size:[s1Size+s2Size]
	guard step_index = 1
	do
		s1Size := s1;
		s2Size := s2; 
	
		step_index := 2;
	end

	sendS1:
 	action IP2_S1:[s1] ==> OP2_S:[s1]
 	guard step_index = 2 and counter < s1Size
 	do
 		counter := counter + 1;
 		if(counter = s1Size) then
 		 	step_index := 3;
 		 	counter := 0;
 		 end	
	end

	sendS2:
 	action IP4_S2:[s2] ==> OP2_S:[s2]
 	guard step_index = 3 and counter < s2Size
 	do
 		counter := counter + 1; 	
 		if(counter = s2Size) then
 		 	step_index := 1;
 		 	counter := 0;
 		 end	
	end

end