/**
 * Developers: Junaid Jameel Ahmad @ Uni-Konstanz 2011
 */

package Block_Ciphers.Blowfish;

actor Blowfish_Final_XOR() uint(size=8) IP1_Text, uint(size=32) IP2_P ==> uint(size=8) OP: 

	List(type:uint(size=8), size=8) P := [0: for int i in 0 ..7]; // Final two sub-keys.
	
	// Flag controlling firings of different actions.		
	bool subKeysReceived := false;
	
	readSubKeys:
	action IP2_P:[p] repeat 2 ==>
	guard not subKeysReceived
	do
		P[0] := (p[0]>>24) & 0xFF;
		P[1] := (p[0]>>16) & 0xFF;
		P[2] := (p[0]>>8) & 0xFF;
		P[3] := p[0] & 0xFF;

		P[4] := (p[1]>>24) & 0xFF;
		P[5] := (p[1]>>16) & 0xFF;
		P[6] := (p[1]>>8) & 0xFF;
		P[7] := p[1] & 0xFF;

		subKeysReceived := true;
	end

	// Receive text and XOR it with the proper subkey key.
	XOR:
	action IP1_Text:[x] repeat 8 ==> OP:[x] repeat 8
	guard subKeysReceived
	do
		foreach int i in 0 .. 7 do
			x[i] := x[i] ^ P[i];
		end

	end

end

