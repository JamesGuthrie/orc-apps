package std.io;

unit File :

	/* 
	 * Creates a random access file stream to read from, and to write to, the file specified by the fileName argument. 
	 * Returns the file descriptor associated with this stream.
	 */
	native function accessFile(String fileName) --> int end
	
	/* 
	 * Reads an unsigned eight-bit number from the file specified by the descriptor argument.
	 */
	native function readUnsignedByte(int desc) -->  uint(size=8) end
    
    /* 
	 * Reads a signed eight-bit number from the file specified by the descriptor argument.
	 */
	native function readByte(int desc) -->  int(size=8) end
	
	/* 
	 * Writes an unsigned eight-bit number from the file specified by the descriptor argument.
	 */
	native function writeUnsignedByte(int desc, uint(size=8) v ) -->  bool end
    
    /* 
	 * Writes a signed eight-bit number from the file specified by the descriptor argument.
	 */
	native function writeByte(int desc, int(size=8) v ) -->  bool end     
	
	/* 
	 * Returns the length of the descriptor argument.
	 */
	native function sizeOfFile(int desc) --> int(size=32) end
	
	/* 
	 * Closes the random access file stream and releases any system resources associated with the stream.
	 * Returns the new file descriptor null.
	 */
	native function closeFile(int desc) --> int end
	
	/*
	 * Sets the file-pointer offset, measured from the beginning of this file, at which the next read or write occurs.
	 */
	native function seek(int desc, int(size=64) pos) --> bool end

	
end