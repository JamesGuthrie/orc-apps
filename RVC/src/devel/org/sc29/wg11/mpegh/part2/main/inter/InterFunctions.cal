package devel.org.sc29.wg11.mpegh.part2.main.inter;

unit InterFunctions : 
	
	function QPEL_FILTER_1(uint(size=16) src [ 3 ] [ 64 + 7 ] [ 64 + 7 ],
		int(size=16) x, int(size=16) y, int(size=16) stride) --> int(size=16) :
		(-src[0][x - 3 * stride][y] + 4 * src[0][x - 2 * stride][y] - 10 * src[0][x
		- stride][y] + 58 * src[0][x][y] + 17 * src[0][x + stride][y] - 5 * src[0][x
		+ 2 * stride][y] + 1 * src[0][x + 3 * stride][y])
	end

	function QPEL_FILTER_2(uint(size=16) src [ 3 ] [ 64 + 7 ] [ 64 + 7 ],
		int(size=16) x, int(size=16) y, int(size=16) stride) --> int(size=16) :
		(-src[0][x - 3 * stride][y] + 4 * src[0][x - 2 * stride][y] - 11 * src[0][x
		- stride][y] + 40 * src[0][x][y] + 40 * src[0][x + stride][y] - 11 *
		src[0][x + 2 * stride][y] + 4 * src[0][x + 3 * stride][y] - src[0][x + 4 *
		stride][y])
	end

	function QPEL_FILTER_3(uint(size=16) src [ 3 ] [ 64 + 7 ] [ 64 + 7 ],
		int(size=16) x, int(size=16) y, int(size=16) stride) --> int(size=16) :
		(src[0][x - 2 * stride][y] - 5 * src[0][x - stride][y] + 17 * src[0][x][y] +
		58 * src[0][x + stride][y] - 10 * src[0][x + 2 * stride][y] + 4 * src[0][x +
		3 * stride][y] - src[0][x + 4 * stride][y])
	end
	
	procedure put_hevc_qpel_h(int(size=16) intermSamples [ 3 ] [ 64 + 7] [ 64 + 7],
		uint(size=16) refSamples [ 3 ] [ 64 + 7 ] [ 64 + 7 ], int filterIdx, int
		width, int height)
	begin
		foreach int y in 0 .. height do
			foreach int x in 0 .. width do
				if filterIdx = 1 then
					intermSamples[0][x][y] := QPEL_FILTER_1(refSamples, x+3, y, 1) - 8192;
				elsif filterIdx = 2 then 
					intermSamples[0][x][y] := QPEL_FILTER_2(refSamples, x+3, y, 1) - 8192;
				elsif filterIdx = 3 then 
					intermSamples[0][x][y] := QPEL_FILTER_3(refSamples, x+3, y, 1) - 8192;
				end
			end
		end
	end

end
