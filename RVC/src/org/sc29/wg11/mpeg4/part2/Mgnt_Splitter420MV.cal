/*************************************************************************
* This software module was originally developed by Christophe Lucarz (EPFL), 
* in the course of development of the ISO/IEC 23002-4 (Video Tool Library) 
* for reference purposes and its performance may not have been optimized. 
* This software module is an implementation of one or more tools as 
* specified by the ISO/IEC 23002-4.
* 
* ISO/IEC gives You a royalty-free, worldwide, non-exclusive, copyright 
* license to copy, distribute, and make derivative works of this software 
* module or modifications thereof for use in implementations of the 
* ISO/IEC 23002-4 in products that satisfy conformance criteria (if any). 
* 
* Those intending to use this software module in products are advised that 
* its use may infringe existing patents. ISO/IEC have no liability for use 
* of this software module or modifications thereof.
* 
* Copyright is not released for products that do not conform to audiovisual 
* and image-coding related ITU Recommendations and/or ISO/IEC International 
* Standards. 
* 
* Assurance that the originally developed software module can be used 
* (1) in the ISO/IEC 23002-4 once the ISO/IEC 23002-4 has been adopted; and 
* (2) to develop the ISO/IEC 23002-4: 
* 
* EPFL grants ISO/IEC all rights necessary to 
* include the originally developed software module or modifications thereof 
* in the ISO/IEC 23002-4 and to permit ISO/IEC to offer You a royalty-free, 
* worldwide, non-exclusive, copyright license to copy, distribute, and make 
* derivative works for use in implementations of the ISO/IEC 23002-4 in 
* products that satisfy conformance criteria (if any), and to the extent 
* that such originally developed software module or portions of it are 
* included in the ISO/IEC 23002-4.  To the extent that EPFL 
* owns patent rights that would be required to make, use, or 
* sell the originally developed software module or portions thereof 
* included in the ISO/IEC 23002-4 in a conforming product, EPFL
* will assure the ISO/IEC that it is willing to 
* negotiate licenses under reasonable and non-discriminatory terms and 
* conditions with applicants throughout the world.
* 
* ISO/IEC gives You a free license to this software module or modifications 
* thereof for the sole  purpose of developing theISO/IEC 23002-4
* 
* EPFL retains full right to modify and use the 
* code for its own purpose, assign or donate the code to a third party and 
* to inhibit third parties from using the code for products that do not 
* conform to MPEG-related ITU Recommendations and/or ISO/IEC International 
* Standards. 
* 
* This copyright notice must be included in all copies or derivative works. 
* Copyright (c) ISO/IEC 2007-2011.
*************************************************************************/
/*****************
 *  splitter_MV
*
* Author Christophe Lucarz (christophe.lucarz@epfl.ch)
*
* Description for each block a couple (x,y) is associated, the coordinates of the motion vector. The x coordinate arrives first, followed by the Y  coordinate. This splitter send the 8 first token for the Y component (4 block  2 tokens), then, the 9th and 10th token to the U component and the 11th and  12th token to the U component 
*********/

package org.sc29.wg11.mpeg4.part2;

import org.sc29.wg11.mpeg4.part2.Constants.*;

actor Mgnt_Splitter420MV () 
	int(size=MV_SZ) MV, 
	bool MOTION ==> 
		int(size=MV_SZ) MV_Y,
		int(size=MV_SZ) MV_U, 
		int(size=MV_SZ) MV_V :
	
	// Skip btype token
	skipbtype: action  MOTION:[mot] ==>
	guard
		not mot
	end

	// split the vectors
	B1: action MV:[ mv ] repeat 2, MOTION:[mot] ==> MV_Y:[ mv[0], mv[1] ]
	end

	B2: action MV:[ mv ] repeat 2, MOTION:[mot] ==> MV_Y:[ mv[0], mv[1] ]
	end

	B3: action MV:[ mv ] repeat 2, MOTION:[mot] ==> MV_Y:[ mv[0], mv[1] ]
	end

	B4: action MV:[ mv ] repeat 2, MOTION:[mot] ==> MV_Y:[ mv[0], mv[1] ]
	end

	B5: action MV:[ mv ] repeat 2, MOTION:[mot] ==> MV_U:[ mv[0], mv[1] ]
	end

	B6: action MV:[ mv ] repeat 2, MOTION:[mot] ==> MV_V:[ mv[0], mv[1] ]
	end

	schedule fsm cmd :
		
		cmd ( B1 ) --> block2;
		cmd ( skipbtype ) --> block2;
		block2 ( B2 ) --> block3;
		block2 ( skipbtype ) --> block3;
		block3 ( B3 ) --> block4;
		block3 ( skipbtype ) --> block4;
		block4 ( B4 ) --> block5;
		block4 ( skipbtype ) --> block5;
		block5 ( B5 ) --> block6;
		block5 ( skipbtype ) --> block6;
		block6 ( B6 ) --> cmd;
		block6 ( skipbtype ) --> cmd;
	end

	priority
		skipbtype > B1;
		skipbtype > B2;
		skipbtype > B3;
		skipbtype > B4;
		skipbtype > B5;
		skipbtype > B6;
	end

end