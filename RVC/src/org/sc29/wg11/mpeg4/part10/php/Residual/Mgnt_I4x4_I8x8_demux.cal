/********************************************************************************

This software module was originally developed by Gildas Cocherel IETR/INSA of Rennes (France), in the course of development of the ISO/IEC 23002-4 for reference purposes and its performance may not have been optimized. This software module is an implementation of one or more tools as specified by the MPEG-C part 4.
ISO/IEC gives You a royalty-free, worldwide, non-exclusive, copyright license to copy, distribute, and make derivative works of this software module or modifications thereof for use in implementations of the ISO/IEC 23002-4  in products that satisfy conformance criteria (if any).
Those intending to use this software module in products are advised that its use may infringe existing patents. ISO/IEC have no liability for use of this software module or modifications thereof.
Copyright is not released for products that do not conform to audiovisual and image-coding related ITU Recommendations and/or ISO/IEC International Standards.
Assurance that the originally developed software module can be used (1) in the ISO/IEC 23002-4 once the ISO/IEC 23002-4 has been adopted; and (2) to develop the MPEG-C part 4:

IETR/INSA of Rennes (France) grants ISO/IEC all rights necessary to include the originally developed software module or modifications thereof in the ISO/IEC 23002-4 and to permit ISO/IEC to offer You a royalty-free, worldwide, non-exclusive, copyright license to copy, distribute, and make derivative works for use in implementations of the MPEG-C part 4 in products that satisfy conformance criteria (if any), and to the extent that such originally developed software module or portions of it are included in the MPEG-C part 4.  To the extent that IETR/INSA of Rennes (France) owns patent rights that would be required to make, use, or sell the originally developed software module or portions thereof included in the MPEG-C part 4 in a conforming product,  IETR/INSA of Rennes (France) will assure the ISO/IEC that it is willing to negotiate licenses under reasonable and non-discriminatory terms and conditions with applicants throughout the world.

ISO/IEC gives You a free license to this software module or modifications thereof for the sole  purpose of developing the MPEG-C part 4

IETR/INSA of Rennes (France) retains full right to modify and use the code for its own purpose, assign or donate the code to a third party and to inhibit third parties from using the code for products that do not conform to MPEG-related ITU Recommendations and/or ISO/IEC International Standards.
This copyright notice must be included in all copies or derivative works. Copyright (c) ISO/IEC 2008.

*****************************************************************************/
package org.sc29.wg11.mpeg4.part10.php.Residual;

import org.sc29.wg11.mpeg4.part10.MacroBlockInfo.*;

actor Mgnt_I4x4_I8x8_demux ()  int(size=16) COEF_AC,
						 uint(size= 6) MB_TYPE,
						 uint(size= 8) SCALING_LIST,
						  int(size= 8) QP,
						 bool          TRANSFORM_SIZE_8x8_FLAG
						 ==>
						  int(size=16) COEF_AC_4x4,
						 uint(size= 6) MB_TYPE_4x4,
						  int(size= 8) QP_4x4,
						 uint(size= 8) SCALING_LIST_4x4,
						  int(size=16) COEF_AC_8x8,
						 uint(size= 6) MB_TYPE_8x8,
						  int(size= 8) QP_8x8,
						 uint(size= 8) SCALING_LIST_8x8,
						 bool          TRANSFORM_SIZE_8x8_FLAG_O
						 :
	/**************************************************************************
  	 * 
  	 *************************************************************************/
	action MB_TYPE:[mb_type], TRANSFORM_SIZE_8x8_FLAG:[flag] ==>
	guard
		mb_type = BLOCK_TYPE_I_PCM or mb_type = BLOCK_TYPE_P_SKIP or mb_type = BLOCK_TYPE_B_SKIP
	end
	/**************************************************************************
  	 * 
  	 *************************************************************************/
	action MB_TYPE:[mb_type], 
		   SCALING_LIST:[sList] repeat 2*16+2*64
		   ==>
		   MB_TYPE_4x4:[mb_type],
		   SCALING_LIST_4x4:[sList4] repeat 2*16,
		   MB_TYPE_8x8:[mb_type],
		   SCALING_LIST_8x8:[sList8] repeat 2*64
	guard
		mb_type >= NEW_SLICE
	var
		uint(size=8) sList4[32]  = [sList[i] : for int i in 0    .. 2*16-1  ],
		uint(size=8) sList8[128] = [sList[i] : for int i in 2*16 .. 2*16 + 2*64-1 ]
	end
	/**************************************************************************
  	 * 
  	 *************************************************************************/
	action  TRANSFORM_SIZE_8x8_FLAG:[flag], MB_TYPE:[mb_type], QP:[qp], COEF_AC:[ x ] repeat 256
			==>
			MB_TYPE_8x8:[mb_type], QP_8x8:[qp], COEF_AC_8x8:[ x ] repeat 256,
			TRANSFORM_SIZE_8x8_FLAG_O:[flag]
	guard
		flag and mb_type < NEW_SLICE,
		not (mb_type = BLOCK_TYPE_I_PCM or mb_type = BLOCK_TYPE_P_SKIP or mb_type = BLOCK_TYPE_B_SKIP)
	end
	/**************************************************************************
  	 * 
  	 *************************************************************************/
	action  TRANSFORM_SIZE_8x8_FLAG:[flag], MB_TYPE:[mb_type], QP:[qp], COEF_AC:[ x ] repeat 256
			==>
			MB_TYPE_4x4:[mb_type], QP_4x4:[qp], COEF_AC_4x4:[ x ] repeat 256,
			TRANSFORM_SIZE_8x8_FLAG_O:[flag]
	guard
		not flag and mb_type < NEW_SLICE,
		not (mb_type = BLOCK_TYPE_I_PCM or mb_type = BLOCK_TYPE_P_SKIP or mb_type = BLOCK_TYPE_B_SKIP)
	end
end
