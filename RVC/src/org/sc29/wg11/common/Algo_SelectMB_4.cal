/********************************************************************************

This software module was originally developed by Florian Decologne IETR/INSA of Rennes (France), in the course of development of the ISO/IEC 23002-5 for reference purposes and its performance may not have been optimized. This software module is an implementation of one or more tools as specified by the MPEG-C part 4.
ISO/IEC gives You a royalty-free, worldwide, non-exclusive, copyright license to copy, distribute, and make derivative works of this software module or modifications thereof for use in implementations of the ISO/IEC 23002-5  in products that satisfy conformance criteria (if any).
Those intending to use this software module in products are advised that its use may infringe existing patents. ISO/IEC have no liability for use of this software module or modifications thereof.
Copyright is not released for products that do not conform to audiovisual and image-coding related ITU Recommendations and/or ISO/IEC International Standards.
Assurance that the originally developed software module can be used (1) in the ISO/IEC 23002-5 once the ISO/IEC 23002-5 has been adopted; and (2) to develop the MPEG-C part 4:

IETR/INSA of Rennes (France) grants ISO/IEC all rights necessary to include the originally developed software module or modifications thereof in the ISO/IEC 23002-5 and to permit ISO/IEC to offer You a royalty-free, worldwide, non-exclusive, copyright license to copy, distribute, and make derivative works for use in implementations of the MPEG-C part 4 in products that satisfy conformance criteria (if any), and to the extent that such originally developed software module or portions of it are included in the MPEG-C part 4.  To the extent that IETR/INSA of Rennes (France) owns patent rights that would be required to make, use, or sell the originally developed software module or portions thereof included in the MPEG-C part 4 in a conforming product,  IETR/INSA of Rennes (France) will assure the ISO/IEC that it is willing to negotiate licenses under reasonable and non-discriminatory terms and conditions with applicants throughout the world.

ISO/IEC gives You a free license to this software module or modifications thereof for the sole  purpose of developing the MPEG-C part 4

IETR/INSA of Rennes (France) retains full right to modify and use the code for its own purpose, assign or donate the code to a third party and to inhibit third parties from using the code for products that do not conform to MPEG-related ITU Recommendations and/or ISO/IEC International Standards.
This copyright notice must be included in all copies or derivative works. Copyright (c) ISO/IEC 2008.

*****************************************************************************/
//Modified by Damien de Saint Jorre IETR/INSA of Rennes (France)
package org.sc29.wg11.common;

actor Algo_SelectMB_4 (int WIDTH) 
	uint(size=3)  SELECT,

	uint (size=8) IN_0,
	uint (size=8) IN_1,
	uint (size=8) IN_2,
	uint (size=8) IN_3
		==>
	uint(size=8)  OUT
		:

	
	uint(size=9) cnt;

	GetSelect.In0: action SELECT :[Select] ==>
	guard Select = 0
	do
		cnt:=0;
	end
	  
	GetMb.In0.loop:action
		IN_0 :[x] 
			==>
		OUT :[x]
	do
		cnt:= cnt + 1;
	end

	GetMb.In0.endloop:action ==>
	guard
		cnt=WIDTH
	end

	GetSelect.In1: action SELECT :[Select] ==>
	guard Select = 1
	do
		cnt:=0;
	end
  
	GetMb.In1.loop:action
		IN_1 :[x] 
			==>
		OUT :[x]
	do
		cnt:= cnt + 1;
	end

	GetMb.In1.endloop:action ==>
	guard
		cnt=WIDTH
	end

	GetSelect.In2: action SELECT :[Select] ==>
	guard Select = 2
	do
		cnt:=0;
	end
  
	GetMb.In2.loop:action
		IN_2 :[x] 
			==>
		OUT :[x]
	do
		cnt:= cnt + 1;
	end

	GetMb.In2.endloop:action ==>
	guard
		cnt=WIDTH
	end

	GetSelect.In3: action SELECT :[Select] ==>
	guard Select = 3
	do
		cnt:=0;
	end
  
	GetMb.In3.loop:action
		IN_3 :[x] 
			==>
		OUT :[x]
	do
		cnt:= cnt + 1;
	end

	GetMb.In3.endloop:action ==>
	guard
		cnt=WIDTH
	end
 
	
	schedule fsm GetSelect:
		GetSelect        (GetSelect.In0   )--> GetMacroBlockIn0;
		GetSelect        (GetSelect.In1   )--> GetMacroBlockIn1;
		GetSelect        (GetSelect.In2   )--> GetMacroBlockIn2;
		GetSelect        (GetSelect.In3   )--> GetMacroBlockIn3;

		GetMacroBlockIn0 (GetMb.In0.loop       )--> GetMacroBlockIn0;
		GetMacroBlockIn0 (GetMb.In0.endloop    )--> GetSelect;
		GetMacroBlockIn1 (GetMb.In1.loop       )--> GetMacroBlockIn1;
		GetMacroBlockIn1 (GetMb.In1.endloop    )--> GetSelect;
		GetMacroBlockIn2 (GetMb.In2.loop       )--> GetMacroBlockIn2;
		GetMacroBlockIn2 (GetMb.In2.endloop    )--> GetSelect;
		GetMacroBlockIn3 (GetMb.In3.loop       )--> GetMacroBlockIn3;
		GetMacroBlockIn3 (GetMb.In3.endloop    )--> GetSelect;
	end
	
	priority
		GetMb.In0.endloop > GetMb.In0.loop;
		GetMb.In1.endloop > GetMb.In1.loop;
		GetMb.In2.endloop > GetMb.In2.loop;
		GetMb.In3.endloop > GetMb.In3.loop;
	end
end
