package avs.decode.inter;

import avs.Constants.*;

actor Algo_select()   
	int(size=BTYPE_SZ) BTYPE, 
	int(size=PIX_SZ) PRED_INTRA, 
	int(size=PIX_SZ) PRED_INTER 
		==>   
		int(size=PIX_SZ) PRED:

	int(size=BTYPE_SZ) btype;
	
	get_new_vop : action BTYPE:[cmd] ==>
	guard
		(cmd & NEWVOP) !=0
	end

	get_btype : action BTYPE:[cmd] ==>
	do
		btype:=cmd;
	end

	skip: action BTYPE:[w,h] ==>
	end
	
	get.intra : action PRED_INTRA:[x] repeat 64 ==> PRED:[x] repeat 64 
	guard
		(btype & INTRA) !=0
	end

	get.inter : action PRED_INTER:[x] repeat 64 ==> PRED:[x] repeat 64 
	guard
		(btype & INTER) !=0
	end

	schedule fsm start:
		start ( get_new_vop ) --> skip;
		start ( get_btype ) --> get_block;
		skip ( skip ) --> start;
		get_block ( get ) --> start;
	end
	
	priority
		get_new_vop > get_btype;
	end
end