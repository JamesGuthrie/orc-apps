package avs.P;

actor Algo_RefIdxtoPOC()
	int (size=32) RefList,
	uint(size=4)  RefIdx,
	bool          NewList
		==>
	uint(size=32) POCtoRead
		:

	List(type:uint(size=32), size=16) RefPoc;

	uint(size=5)  SizeList;
	uint(size=5)  CountRead;
	bool  LastPicID:=false;

	ReadSizeList: action 
			RefList :[ SizeRefList ]
				==>
		do
			SizeList  := SizeRefList;
			CountRead := 0;
		end


	ReadRefList: action
			RefList :[ PocList , FrameNum ]
				==>
		guard
			CountRead < SizeList
		do
			RefPoc[CountRead] := PocList;
			CountRead         := CountRead + 1;
		end


	ReadRefListDone: action ==>
		end


	GetReadAddr: action
			RefIdx    :[ ListIdx ],
			NewList :[ValPicID]
				==>
			POCtoRead :[ RefPoc[ListIdx] ]
		guard
			ValPicID = LastPicID
		end


	NewPic: action
			NewList :[ValPicID]
				==>
		guard
			ValPicID != LastPicID
		do
			LastPicID := ValPicID;
		end

	schedule fsm ReadSizeList:

		ReadSizeList  (ReadSizeList      )-->ReadRefList;
		ReadRefList   (ReadRefList       )-->ReadRefList;
		ReadRefList   (ReadRefListDone   )-->GetReadAddr;

		GetReadAddr   (GetReadAddr       )-->GetReadAddr;
		GetReadAddr   (NewPic            )-->ReadSizeList;
	end

	priority
		ReadRefList     > ReadRefListDone;
	end
end