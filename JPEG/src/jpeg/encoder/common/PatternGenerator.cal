package jpeg.encoder.common;

actor PatternGenerator()
	==>
		//bool Init,
		int(size=32) SOI,
		int(size=9) R,
		int(size=9) G,
		int(size=9) B:
		
	int count := 0;

	int state := 0;
	
	int countPix := 0;
	int WIDTH := 512;
	int HEIGHT := 512;
	int Image_Counter := 0;
	
	SendPattern: action ==> R:[v], G:[v], B:[v]
	var
		int v := 0
	do
		if(state = 0) then
			v := count;
		else
			v := 255-count;
		end
		count := count + 1;
		if(count >= 256)then
			count := 0;
		end
		countPix := countPix + 1;
		if(countPix >= (WIDTH*HEIGHT))then
			countPix := 0;
			if(state = 0)then
				state := 1;
			else
				state := 0;
			end
		end
		Image_Counter := Image_Counter + 1;
	end
	 
	SendNewImage: action ==>
	guard
		Image_Counter = HEIGHT * WIDTH
	do
		Image_Counter := 0;
	end
	
	SentW: action ==> SOI:[WIDTH]
	end
	
	SentH: action ==> SOI:[HEIGHT]
	end
	
	schedule fsm s0:
		s0	(SentW) --> s1;
		s1	(SentH) --> s2;	
		s2	(SendPattern) --> s2;
		s2	(SendNewImage) --> s0;
	end
	
	priority
		SendNewImage > SendPattern;
	end
		
end 