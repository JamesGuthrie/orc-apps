package jpeg.encoder.hw.rastertomb;

actor SplitY()
	int(size=10) Y,
	int SOI
		==>
			int(size=10) Line0,
			int(size=10) Line1,
			int(size=10) Line2,
			int(size=10) Line3,
			int(size=10) Line4,
			int(size=10) Line5,
			int(size=10) Line6,
			int(size=10) Line7,
			int(size=10) Line8,
			int(size=10) Line9,
			int(size=10) Line10,
			int(size=10) Line11,
			int(size=10) Line12,
			int(size=10) Line13,
			int(size=10) Line14,
			int(size=10) Line15 :
	
	
	int MAX_WIDTH = 2048;
	int width;
	int height;
	
	int Counter := 0;
	int Lines := 0;
	
	List(type:int(size=10),size=MAX_WIDTH) RasterLine0 := [0:for int i in 0 .. MAX_WIDTH - 1];
	List(type:int(size=10),size=MAX_WIDTH) RasterLine1 := [0:for int i in 0 .. MAX_WIDTH - 1];
	List(type:int(size=10),size=MAX_WIDTH) RasterLine2 := [0:for int i in 0 .. MAX_WIDTH - 1];
	List(type:int(size=10),size=MAX_WIDTH) RasterLine3 := [0:for int i in 0 .. MAX_WIDTH - 1];
	List(type:int(size=10),size=MAX_WIDTH) RasterLine4 := [0:for int i in 0 .. MAX_WIDTH - 1];
	List(type:int(size=10),size=MAX_WIDTH) RasterLine5 := [0:for int i in 0 .. MAX_WIDTH - 1];
	List(type:int(size=10),size=MAX_WIDTH) RasterLine6 := [0:for int i in 0 .. MAX_WIDTH - 1];
	List(type:int(size=10),size=MAX_WIDTH) RasterLine7 := [0:for int i in 0 .. MAX_WIDTH - 1];
	List(type:int(size=10),size=MAX_WIDTH) RasterLine8 := [0:for int i in 0 .. MAX_WIDTH - 1];
	List(type:int(size=10),size=MAX_WIDTH) RasterLine9 := [0:for int i in 0 .. MAX_WIDTH - 1];
	List(type:int(size=10),size=MAX_WIDTH) RasterLine10 := [0:for int i in 0 .. MAX_WIDTH - 1];
	List(type:int(size=10),size=MAX_WIDTH) RasterLine11 := [0:for int i in 0 .. MAX_WIDTH - 1];
	List(type:int(size=10),size=MAX_WIDTH) RasterLine12 := [0:for int i in 0 .. MAX_WIDTH - 1];
	List(type:int(size=10),size=MAX_WIDTH) RasterLine13 := [0:for int i in 0 .. MAX_WIDTH - 1];
	List(type:int(size=10),size=MAX_WIDTH) RasterLine14 := [0:for int i in 0 .. MAX_WIDTH - 1];
	List(type:int(size=10),size=MAX_WIDTH) RasterLine15 := [0:for int i in 0 .. MAX_WIDTH - 1];
	
	getSzW: action SOI:[soi] ==> 
	do
		width := soi;
	end
	
	getSzH: action SOI:[soi] ==> 
	do
		height := soi;
	end
	
	Stop: action ==>
	guard
		Counter = width
	do
		Counter := 0;
	end
	
	StopSent: action ==>
	guard
		Counter = width
	do
		Counter := 0;
		Lines   := Lines + 16;
	end
	
	// Line 0 
	
	SaveLine0: action Y:[token] ==>
	do
		RasterLine0[Counter] := token-128;
		Counter := Counter + 1;
	end
	

	
	// Line 1
	
	SaveLine1: action Y:[token] ==>
	do
		RasterLine1[Counter] := token-128;
		Counter := Counter + 1;
	end
	

	
	// Line 2
	
	SaveLine2: action Y:[token] ==>
	do
		RasterLine2[Counter] := token-128;
		Counter := Counter + 1;
	end
	
	
	// Line 3
	
	SaveLine3: action Y:[token] ==>
	do
		RasterLine3[Counter] := token-128;
		Counter := Counter + 1;
	end
	
	
	// Line 4
	
	SaveLine4: action Y:[token] ==>
	do
		RasterLine4[Counter] := token-128;
		Counter := Counter + 1;
	end
	
	
	// Line 5
	
	SaveLine5: action Y:[token] ==>
	do
		RasterLine5[Counter] := token-128;
		Counter := Counter + 1;
	end
	
	
	// Line 6
	
	SaveLine6: action Y:[token] ==>
	do
		RasterLine6[Counter] := token-128;
		Counter := Counter + 1;
	end
	

	// Line 7
	
	SaveLine7: action Y:[token] ==>
	do
		RasterLine7[Counter] := token-128;
		Counter := Counter + 1;
	end
	

	// Line 8
	
	SaveLine8: action Y:[token] ==>
	do
		RasterLine8[Counter] := token-128;
		Counter := Counter + 1;
	end
	
	
	// Line 9
	
	SaveLine9: action Y:[token] ==>
	do
		RasterLine9[Counter] := token-128;
		Counter := Counter + 1;
	end
	
	// Line 10
	
	SaveLine10: action Y:[token] ==>
	do
		RasterLine10[Counter] := token-128;
		Counter := Counter + 1;
	end
	

	
	// Line 11
	
	SaveLine11: action Y:[token] ==>
	do
		RasterLine11[Counter] := token-128;
		Counter := Counter + 1;
	end
	
	
	
	// Line 12
	
	SaveLine12: action Y:[token] ==>
	do
		RasterLine12[Counter] := token-128;
		Counter := Counter + 1;
	end
	
	
	
	// Line 13
	
	SaveLine13: action Y:[token] ==>
	do
		RasterLine13[Counter] := token-128;
		Counter := Counter + 1;
	end
	
	
	// Line 14
	
	SaveLine14: action Y:[token] ==>
	do
		RasterLine14[Counter] := token-128;
		Counter := Counter + 1;
	end
	
	// Line 15
	
	SaveLine15: action Y:[token] ==>
	do
		RasterLine15[Counter] := token-128;
		Counter := Counter + 1;
	end
	
	SentLines: action ==>
							Line0:[token0],
							Line1:[token1],
							Line2:[token2],
							Line3:[token3],
							Line4:[token4],
							Line5:[token5],
							Line6:[token6],
							Line7:[token7],
							Line8:[token8],
							Line9:[token9],
							Line10:[token10],
							Line11:[token11],
							Line12:[token12],
							Line13:[token13],
							Line14:[token14],
							Line15:[token15]
	var	
		int token0,
		int token1,
		int token2,
		int token3,
		int token4,
		int token5,
		int token6,
		int token7,
		int token8,
		int token9,
		int token10,
		int token11,
		int token12,
		int token13,
		int token14,
		int token15
	do
		token0 := RasterLine0[Counter];
		token1 := RasterLine1[Counter];
		token2 := RasterLine2[Counter];
		token3 := RasterLine3[Counter];
		token4 := RasterLine4[Counter];
		token5 := RasterLine5[Counter];
		token6 := RasterLine6[Counter];
		token7 := RasterLine7[Counter];
		token8 := RasterLine8[Counter];
		token9 := RasterLine9[Counter];
		token10 := RasterLine10[Counter];
		token11 := RasterLine11[Counter];
		token12 := RasterLine12[Counter];
		token13 := RasterLine13[Counter];
		token14 := RasterLine14[Counter];
		token15 := RasterLine15[Counter];
		Counter := Counter + 1;
	end
	
	
	EOI: action ==>
	guard
		Lines = height
	do
		Lines := 0;
	end 
		
	schedule fsm sA:
	
		sA		(getSzW)		--> sB;
		sB		(getSzH)		--> save0;
		
		// End Of Image --> Restart
		save0	(EOI)			--> sA;
		
		save0	(SaveLine0)		--> save0;
		save0	(Stop)			--> save1;
		
		save1	(SaveLine1)		--> save1;
		save1	(Stop)			--> save2;
		
		save2	(SaveLine2)		--> save2;
		save2	(Stop)			--> save3;  
		
		save3	(SaveLine3)		--> save3;
		save3	(Stop)			--> save4;      

		save4	(SaveLine4)		--> save4;
		save4	(Stop)			--> save5;
		
		save5	(SaveLine5)		--> save5;
		save5	(Stop)			--> save6;
		
		save6	(SaveLine6)		--> save6;
		save6	(Stop)			--> save7;
		
		save7	(SaveLine7)		--> save7;
		save7	(Stop)			--> save8;
		
		save8	(SaveLine8)		--> save8;
		save8	(Stop)			--> save9;
		
		save9	(SaveLine9)		--> save9;
		save9	(Stop)			--> save10;
		
		save10	(SaveLine10)	--> save10;
		save10	(Stop)			--> save11;
		
		save11	(SaveLine11)	--> save11;
		save11	(Stop)			--> save12;
		
		save12	(SaveLine12)	--> save12;
		save12	(Stop)			--> save13;
		
		save13	(SaveLine13)	--> save13;
		save13	(Stop)			--> save14; 
		
		save14	(SaveLine14)	--> save14;
		save14	(Stop)			--> save15;
		
		save15	(SaveLine15)	--> save15;
		save15	(Stop)			--> sent;
		
		// Sent Tokens
		
		sent	(SentLines)		--> sent;
		sent	(StopSent)		--> save0;
		  		        
	end	
		
	priority 
		EOI > Stop > SaveLine0;
		Stop > SaveLine1;
		Stop > SaveLine2;
		Stop > SaveLine3;
		Stop > SaveLine4;
		Stop > SaveLine5;
		Stop > SaveLine6;
		Stop > SaveLine7;
		Stop > SaveLine8;
		Stop > SaveLine9;
		Stop > SaveLine10;
		Stop > SaveLine11;
		Stop > SaveLine12;
		Stop > SaveLine13;
		Stop > SaveLine14;
		Stop > SaveLine15;
		
		StopSent > SentLines;
		
	end
end