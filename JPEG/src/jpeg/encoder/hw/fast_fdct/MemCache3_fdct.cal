/*
 * Copyright (c) 2011, EPFL
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 *   * Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *   * Neither the name of the EPFL nor the names of its
 *     contributors may be used to endorse or promote products derived from this
 *     software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
 
/*
*	author:			alhadi.abrahman@epfl.ch
*	description: 	Temporary memory to store 2nd stage 1D IoutT
					The actor first stores all parallel column output of 2nd stage IoutT,
					then outputs each pixel in serial
*	parameters:		-			
*	input: 			inData0 to inData7 - parallel input of one column after 1st stage IoutT
*	output: 		outData - serial output after 2nd stage IoutT
*/

package jpeg.encoder.hw.fast_fdct;

actor MemCache3_fdct () int (size = 32) inData0, int (size = 32) inData1, int (size = 32) inData2, int (size = 32) inData3,
				int (size = 32) inData4, int (size = 32) inData5, int (size = 32) inData6, int (size = 32) inData7 ==>
				int (size = 32) outData :

	int (size = 32) ind0 := 0;
	int (size = 32) ind1 := 0;
	int (size = 32) ind2 := 0;
	int (size = 32) ind3 := 0;
	int (size = 32) ind4 := 0;
	int (size = 32) ind5 := 0;
	int (size = 32) ind6 := 0;
	int (size = 32) ind7 := 0;
	int (size = 32) ind8 := 0;
	int (size = 32) ind9 := 0;
	int (size = 32) ind10 := 0;
	int (size = 32) ind11 := 0;
	int (size = 32) ind12 := 0;
	int (size = 32) ind13 := 0;
	int (size = 32) ind14 := 0;
	int (size = 32) ind15 := 0;
	int (size = 32) ind16 := 0;
	int (size = 32) ind17 := 0;
	int (size = 32) ind18 := 0;
	int (size = 32) ind19 := 0;
	int (size = 32) ind20 := 0;
	int (size = 32) ind21 := 0;
	int (size = 32) ind22 := 0;
	int (size = 32) ind23 := 0;
	int (size = 32) ind24 := 0;
	int (size = 32) ind25 := 0;
	int (size = 32) ind26 := 0;
	int (size = 32) ind27 := 0;
	int (size = 32) ind28 := 0;
	int (size = 32) ind29 := 0;
	int (size = 32) ind30 := 0;
	int (size = 32) ind31 := 0;
	int (size = 32) ind32 := 0;
	int (size = 32) ind33 := 0;
	int (size = 32) ind34 := 0;
	int (size = 32) ind35 := 0;
	int (size = 32) ind36 := 0;
	int (size = 32) ind37 := 0;
	int (size = 32) ind38 := 0;
	int (size = 32) ind39 := 0;
	int (size = 32) ind40 := 0;
	int (size = 32) ind41 := 0;
	int (size = 32) ind42 := 0;
	int (size = 32) ind43 := 0;
	int (size = 32) ind44 := 0;
	int (size = 32) ind45 := 0;
	int (size = 32) ind46 := 0;
	int (size = 32) ind47 := 0;
	int (size = 32) ind48 := 0;
	int (size = 32) ind49 := 0;
	int (size = 32) ind50 := 0;
	int (size = 32) ind51 := 0;
	int (size = 32) ind52 := 0;
	int (size = 32) ind53 := 0;
	int (size = 32) ind54 := 0;
	int (size = 32) ind55 := 0;
	int (size = 32) ind56 := 0;
	int (size = 32) ind57 := 0;
	int (size = 32) ind58 := 0;
	int (size = 32) ind59 := 0;
	int (size = 32) ind60 := 0;
	int (size = 32) ind61 := 0;
	int (size = 32) ind62 := 0;
	int (size = 32) ind63 := 0;
	int (size = 32) outd := 0;
		
	inp0: action inData0: [in0], inData1: [in1], inData2: [in2], inData3: [in3], 
					inData4: [in4], inData5: [in5], inData6: [in6], inData7: [in7] ==> 
	do
		ind0 := in0;
		ind8 := in1;
		ind16 := in2;
		ind24 := in3;
		ind32 := in4;
		ind40 := in5;
		ind48 := in6;
		ind56 := in7;
	end
	
	inp1: action inData0: [in0], inData1: [in1], inData2: [in2], inData3: [in3], 
					inData4: [in4], inData5: [in5], inData6: [in6], inData7: [in7] ==> 
	do
		ind1 := in0;
		ind9 := in1;
		ind17 := in2;
		ind25 := in3;
		ind33 := in4;
		ind41 := in5;
		ind49 := in6;
		ind57 := in7;
	end
	
	inp2: action inData0: [in0], inData1: [in1], inData2: [in2], inData3: [in3], 
					inData4: [in4], inData5: [in5], inData6: [in6], inData7: [in7] ==> 
	do
		ind2 := in0;
		ind10 := in1;
		ind18 := in2;
		ind26 := in3;
		ind34 := in4;
		ind42 := in5;
		ind50 := in6;
		ind58 := in7;
	end
	
	inp3: action inData0: [in0], inData1: [in1], inData2: [in2], inData3: [in3], 
					inData4: [in4], inData5: [in5], inData6: [in6], inData7: [in7] ==> 
	do
		ind3 := in0;
		ind11 := in1;
		ind19 := in2;
		ind27 := in3;
		ind35 := in4;
		ind43 := in5;
		ind51 := in6;
		ind59 := in7;
	end
	
	inp4: action inData0: [in0], inData1: [in1], inData2: [in2], inData3: [in3], 
					inData4: [in4], inData5: [in5], inData6: [in6], inData7: [in7] ==> 
	do
		ind4 := in0;
		ind12 := in1;
		ind20 := in2;
		ind28 := in3;
		ind36 := in4;
		ind44 := in5;
		ind52 := in6;
		ind60 := in7;
	end
	
	inp5: action inData0: [in0], inData1: [in1], inData2: [in2], inData3: [in3], 
					inData4: [in4], inData5: [in5], inData6: [in6], inData7: [in7] ==> 
	do
		ind5 := in0;
		ind13 := in1;
		ind21 := in2;
		ind29 := in3;
		ind37 := in4;
		ind45 := in5;
		ind53 := in6;
		ind61 := in7;
	end
	
	inp6: action inData0: [in0], inData1: [in1], inData2: [in2], inData3: [in3], 
					inData4: [in4], inData5: [in5], inData6: [in6], inData7: [in7] ==> 
	do
		ind6 := in0;
		ind14 := in1;
		ind22 := in2;
		ind30 := in3;
		ind38 := in4;
		ind46 := in5;
		ind54 := in6;
		ind62 := in7;
	end
	
	inp7: action inData0: [in0], inData1: [in1], inData2: [in2], inData3: [in3], 
					inData4: [in4], inData5: [in5], inData6: [in6], inData7: [in7] ==> 
	do
		ind7 := in0;
		ind15 := in1;
		ind23 := in2;
		ind31 := in3;
		ind39 := in4;
		ind47 := in5;
		ind55 := in6;
		ind63 := in7;
	end

	
	out0: action ==> outData: [outd] 
  	do
  		outd := ind0;
 	end
 	
 	out1: action ==> outData: [outd] 
  	do
  		outd := ind1;
 	end
 	
 	out2: action ==> outData: [outd] 
  	do
  		outd := ind2;
 	end
 	
 	out3: action ==> outData: [outd] 
  	do
  		outd := ind3;
 	end
 	
 	out4: action ==> outData: [outd] 
  	do
  		outd := ind4;
 	end
 	
 	out5: action ==> outData: [outd] 
  	do
  		outd := ind5;
 	end
 	
 	out6: action ==> outData: [outd] 
  	do
  		outd := ind6;
 	end
 	
 	out7: action ==> outData: [outd] 
  	do
  		outd := ind7;
 	end
 	
 	out8: action ==> outData: [outd] 
  	do
  		outd := ind8;
 	end
 	
 	out9: action ==> outData: [outd] 
  	do
  		outd := ind9;
 	end
 	
 	out10: action ==> outData: [outd] 
  	do
  		outd := ind10;
 	end
 	
 	out11: action ==> outData: [outd] 
  	do
  		outd := ind11;
 	end
 	
 	out12: action ==> outData: [outd] 
  	do
  		outd := ind12;
 	end
 	
 	out13: action ==> outData: [outd] 
  	do
  		outd := ind13;
 	end
 	
 	out14: action ==> outData: [outd] 
  	do
  		outd := ind14;
 	end
 	
 	out15: action ==> outData: [outd] 
  	do
  		outd := ind15;
 	end
 	
 	out16: action ==> outData: [outd] 
  	do
  		outd := ind16;
 	end
 	
 	out17: action ==> outData: [outd] 
  	do
  		outd := ind17;
 	end
 	
 	out18: action ==> outData: [outd] 
  	do
  		outd := ind18;
 	end
 	
 	out19: action ==> outData: [outd] 
  	do
  		outd := ind19;
 	end
 	
 	out20: action ==> outData: [outd] 
  	do
  		outd := ind20;
 	end
 	
 	out21: action ==> outData: [outd] 
  	do
  		outd := ind21;
 	end
 	
 	out22: action ==> outData: [outd] 
  	do
  		outd := ind22;
 	end
 	
 	out23: action ==> outData: [outd] 
  	do
  		outd := ind23;
 	end
 	
 	out24: action ==> outData: [outd] 
  	do
  		outd := ind24;
 	end
 	
 	out25: action ==> outData: [outd] 
  	do
  		outd := ind25;
 	end
 	
 	out26: action ==> outData: [outd] 
  	do
  		outd := ind26;
 	end
 	
 	out27: action ==> outData: [outd] 
  	do
  		outd := ind27;
 	end
 	
 	out28: action ==> outData: [outd] 
  	do
  		outd := ind28;
 	end
 	
 	out29: action ==> outData: [outd] 
  	do
  		outd := ind29;
 	end
 	
 	out30: action ==> outData: [outd] 
  	do
  		outd := ind30;
 	end
 	
 	out31: action ==> outData: [outd] 
  	do
  		outd := ind31;
 	end
 	
 	out32: action ==> outData: [outd] 
  	do
  		outd := ind32;
 	end
 	
 	out33: action ==> outData: [outd] 
  	do
  		outd := ind33;
 	end
 	
 	out34: action ==> outData: [outd] 
  	do
  		outd := ind34;
 	end
 	
 	out35: action ==> outData: [outd] 
  	do
  		outd := ind35;
 	end
 	
 	out36: action ==> outData: [outd] 
  	do
  		outd := ind36;
 	end
 	
 	out37: action ==> outData: [outd] 
  	do
  		outd := ind37;
 	end
 	
 	out38: action ==> outData: [outd] 
  	do
  		outd := ind38;
 	end
 	
 	out39: action ==> outData: [outd] 
  	do
  		outd := ind39;
 	end
 	
 	out40: action ==> outData: [outd] 
  	do
  		outd := ind40;
 	end
 	
 	out41: action ==> outData: [outd] 
  	do
  		outd := ind41;
 	end
 	
 	out42: action ==> outData: [outd] 
  	do
  		outd := ind42;
 	end
 	
 	out43: action ==> outData: [outd] 
  	do
  		outd := ind43;
 	end
 	
 	out44: action ==> outData: [outd] 
  	do
  		outd := ind44;
 	end
 	
 	out45: action ==> outData: [outd] 
  	do
  		outd := ind45;
 	end
 	
 	out46: action ==> outData: [outd] 
  	do
  		outd := ind46;
 	end
 	
 	out47: action ==> outData: [outd] 
  	do
  		outd := ind47;
 	end
 	
 	out48: action ==> outData: [outd] 
  	do
  		outd := ind48;
 	end
 	
 	out49: action ==> outData: [outd] 
  	do
  		outd := ind49;
 	end
 	
 	out50: action ==> outData: [outd] 
  	do
  		outd := ind50;
 	end
 	
 	out51: action ==> outData: [outd] 
  	do
  		outd := ind51;
 	end
 	
 	out52: action ==> outData: [outd] 
  	do
  		outd := ind52;
 	end
 	
 	out53: action ==> outData: [outd] 
  	do
  		outd := ind53;
 	end
 	
 	out54: action ==> outData: [outd] 
  	do
  		outd := ind54;
 	end
 	
 	out55: action ==> outData: [outd] 
  	do
  		outd := ind55;
 	end
 	
 	out56: action ==> outData: [outd] 
  	do
  		outd := ind56;
 	end
 	
 	out57: action ==> outData: [outd] 
  	do
  		outd := ind57;
 	end
 	
 	out58: action ==> outData: [outd] 
  	do
  		outd := ind58;
 	end
 	
 	out59: action ==> outData: [outd] 
  	do
  		outd := ind59;
 	end
 	
 	out60: action ==> outData: [outd] 
  	do
  		outd := ind60;
 	end
 	
 	out61: action ==> outData: [outd] 
  	do
  		outd := ind61;
 	end
 	
 	out62: action ==> outData: [outd] 
  	do
  		outd := ind62;
 	end
 	
 	out63: action ==> outData: [outd] 
  	do
  		outd := ind63;
 	end

	schedule fsm s0 :
	  s0( inp0 )  --> s1;
	  s1( inp1 )  --> s2;
	  s2( inp2 )  --> s3;
	  s3( inp3 )  --> s4;
	  s4( inp4 )  --> s5;
	  s5( inp5 )  --> s6;
	  s6( inp6 )  --> s7;
	  s7( inp7 )  --> s8;
	  
	  s8( out0 )  --> s9;
	  s9( out1 )  --> s10;
	  s10( out2 )  --> s11;
	  s11( out3 )  --> s12;
	  s12( out4 )  --> s13;
	  s13( out5 )  --> s14;
	  s14( out6 )  --> s15;
	  s15( out7 )  --> s16;
	  s16( out8 )  --> s17;
	  s17( out9 )  --> s18;
	  s18( out10 )  --> s19;
	  s19( out11 )  --> s20;
	  s20( out12 )  --> s21;
	  s21( out13 )  --> s22;
	  s22( out14 )  --> s23;
	  s23( out15 )  --> s24;
	  s24( out16 )  --> s25;
	  s25( out17 )  --> s26;
	  s26( out18 )  --> s27;
	  s27( out19 )  --> s28;
	  s28( out20 )  --> s29;
	  s29( out21 )  --> s30;
	  s30( out22 )  --> s31;
	  s31( out23 )  --> s32;
	  s32( out24 )  --> s33;
	  s33( out25 )  --> s34;
	  s34( out26 )  --> s35;
	  s35( out27 )  --> s36;
	  s36( out28 )  --> s37;
	  s37( out29 )  --> s38;
	  s38( out30 )  --> s39;
	  s39( out31 )  --> s40;
	  s40( out32 )  --> s41;
	  s41( out33 )  --> s42;
	  s42( out34 )  --> s43;
	  s43( out35 )  --> s44;
	  s44( out36 )  --> s45;
	  s45( out37 )  --> s46;
	  s46( out38 )  --> s47;
	  s47( out39 )  --> s48;
	  s48( out40 )  --> s49;
	  s49( out41 )  --> s50;
	  s50( out42 )  --> s51;
	  s51( out43 )  --> s52;
	  s52( out44 )  --> s53;
	  s53( out45 )  --> s54;
	  s54( out46 )  --> s55;
	  s55( out47 )  --> s56;
	  s56( out48 )  --> s57;
	  s57( out49 )  --> s58;
	  s58( out50 )  --> s59;
	  s59( out51 )  --> s60;
	  s60( out52 )  --> s61;
	  s61( out53 )  --> s62;
	  s62( out54 )  --> s63;
	  s63( out55 )  --> s64;
	  s64( out56 ) --> s65;
	  s65( out57 ) --> s66;
	  s66( out58 ) --> s67;
	  s67( out59 ) --> s68;
	  s68( out60 ) --> s69;
	  s69( out61 ) --> s70;
	  s70( out62 ) --> s71;
	  s71( out63 ) --> s0;
	end
	
end