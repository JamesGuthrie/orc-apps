/*
 * Author: Jinglin
 * Date: 18/03/13 
 * actor of construct disparity cost
 */
package stereo;
 
 actor computeErr1()
 uint(size=8) L,
 uint(size=8) R
 ==> float Cost:
 
 //const
 int max_rd = 60;
 int height = 375;
 int width = 450;
 int minDisp = 0;
 int T = 12;
 
 //variable
 int d:=0;
 
 
	/******************************************************************************
	* Maximum function
	*****************************************************************************/
	function max(int a,int b)
	-->
		int
		:
			if(a > b)then
				a
			else
				b
			end
	end
	/******************************************************************************
	* Minimum function
	*****************************************************************************/
	function min(int a,int b)
				-->
			int
		:
			if(a < b)then
				a
			else
				b
			end
	end
	/******************************************************************************
	* Abs function
	*****************************************************************************/
	function abs(int(size=32) x)
				-->
			int(size=32)
		:
			if(x > 0)then
				x
			else
				-x
			end
		end
			
	
	CostConstruction:action  L:[left] repeat height*width , R:[right] repeat height*width ==> Cost:[cost] repeat height*width*max_rd
	var
		List (type :float, size = height*width*max_rd) cost
	do
		foreach int rd in 0 .. max_rd-1
	 	do
	 		foreach int j in 0 .. height-1
	 		do
	 			foreach int i in 0 .. width-1
	 			do
	 			d := rd + minDisp; 
	 			cost[(rd*height+j)*width + i] := min(abs(left[j*width+i] - right[j*width+max(0,i-d)]),T);
	 			end
	 		end
	 	end
	
	end
	
 end
 