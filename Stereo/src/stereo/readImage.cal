/* 
 * Author: Jinglin
 * Date: 16/01/13 
 * actor read image file of .ppm 
 */
package stereo;
import std.stdio.Source.*;

actor readImage () ==> uint(size=8) O :

	@native procedure source_init()
	end

	@native procedure source_readNBytes(uint(size=8) outTable[NB_TOKEN_TO_SENT], uint nbTokenToRead)
	end

	@native function source_sizeOfFile() --> int(size=32)
	end

	@native procedure source_rewind()
	end

	@native function source_getNbLoop() --> uint
	end

	@native procedure source_exit(int exitCode)
	end

	uint(size=32) NB_TOKEN_TO_SENT = 4096;

	uint(size=8) bytesRead[NB_TOKEN_TO_SENT];

	uint(size=32) iterationLoop := 0;
	uint(size=32) nbByteLeft;
	uint(size=13) nbByteToSend := 0;
	uint(size=13) nbByteSent := 0; 
	uint(size=32) nbIteration;
	int (size=32) fileLoop;
	
	initialize ==>
	do
		source_init();
		fileLoop := source_getNbLoop();
	end
	
	getFileSize: action ==>
	guard
		source_sizeOfFile() > 0
	var
		uint(size=32) nbBytes
	do
		nbBytes := source_sizeOfFile();
		nbIteration := nbBytes / NB_TOKEN_TO_SENT;
		nbByteLeft := nbBytes mod NB_TOKEN_TO_SENT;
	end
	
	readNBytes: action ==>
	guard
		iterationLoop < nbIteration
	do
		source_readNBytes(bytesRead, NB_TOKEN_TO_SENT);
		nbByteToSend := NB_TOKEN_TO_SENT;
		nbByteSent := 0;
		iterationLoop := iterationLoop + 1;
	end
	
	readEndOfFile: action ==>
	guard
		nbByteLeft > 0
	do
		source_readNBytes(bytesRead, nbByteLeft);
		nbByteToSend := nbByteLeft;
		nbByteSent := 0;
	end
	
	readFileDone: action ==>
	do
		iterationLoop := 0;
		if(fileLoop = 1)then
			source_exit(0);
		else if (fileLoop > 1) then
			fileLoop := fileLoop - 1;
		end end
		//source_decrementNbLoops();
		source_rewind();
	end
	
	sendData.launch: action ==> O:[ Out ]
	guard
		nbByteToSend > nbByteSent
	var
		uint(size=8) Out
	do
		Out := bytesRead[nbByteSent];
		nbByteSent := nbByteSent + 1;
	end
	
	sendData.done: action ==>
	guard
		nbByteToSend = nbByteSent
	end
	
	schedule fsm ReadInit :
		ReadInit (getFileSize) --> ReadFile;
	
		ReadFile (readNBytes   ) --> SendData;
		ReadFile (readEndOfFile) --> SendLastData;
		ReadFile (readFileDone ) --> ReadFile;
	
		SendData (sendData.launch) --> SendData;
		SendData (sendData.done  ) --> ReadFile;
	
		SendLastData (sendData.launch) --> SendLastData;
		SendLastData (sendData.done  ) --> ReadFileDone;
	
		ReadFileDone (readFileDone) --> ReadInit;
	end
	
	priority
		readNBytes > readEndOfFile > readFileDone;
		sendData.launch > sendData.done;
	end

end